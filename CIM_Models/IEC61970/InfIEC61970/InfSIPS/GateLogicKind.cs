///////////////////////////////////////////////////////////
//  GateLogicKind.cs
//  Implementation of the Class GateLogicKind
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:57 AM
//  Original author: sveinols
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



namespace TC57CIM.IEC61970.InfIEC61970.InfSIPS {
	/// <summary>
	/// Define the different logical operations.
	/// </summary>
	public enum GateLogicKind : int {

		/// <summary>
		/// A logical AND operation. True when all input are true.
		/// </summary>
		and,
		/// <summary>
		/// A logical OR operation. True when one or more input are true.
		/// </summary>
		or,
		/// <summary>
		/// A logical NOR operation. False when one or more input are true.
		/// </summary>
		nor,
		/// <summary>
		/// A logical NAND operation. False when all input are true.
		/// </summary>
		nand,
		/// <summary>
		/// A logical NOT operation. Only one input and true input will give false out and
		/// false in will give true out. An inverter.
		/// </summary>
		not,
		/// <summary>
		/// A logical XNOR operation. The function is the inverse of the exclusive OR (XOR)
		/// gate. All input false or true will give true. Otherwise false.
		/// </summary>
		xnor,
		/// <summary>
		/// A logical XOR operation.  All input false or true will give false. Otherwise
		/// true.
		/// </summary>
		xor

	}//end GateLogicKind

}//end namespace InfSIPS