///////////////////////////////////////////////////////////
//  Stage.cs
//  Implementation of the Class Stage
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:21 AM
//  Original author: sveinols
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.InfIEC61970.InfSIPS;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.InfIEC61970.InfSIPS {
	/// <summary>
	/// Stage of a remedial action scheme.
	/// </summary>
	public class Stage : IdentifiedObject {

		/// <summary>
		/// The priority of the stage.   0 = don t care (default) 1 = highest priority. 2
		/// is less than 1 and so on. A stage with higher priority needs be activated
		/// before a lower stage can be activated.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer priority;
		/// <summary>
		/// A Stage consist of one or more StageTrigger.
		/// </summary>
		public TC57CIM.IEC61970.InfIEC61970.InfSIPS.StageTrigger StageTrigger;

		public Stage(){

		}

		~Stage(){

		}

		public override void Dispose(){

		}

	}//end Stage

}//end namespace InfSIPS