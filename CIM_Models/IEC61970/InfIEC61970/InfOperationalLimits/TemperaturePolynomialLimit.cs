///////////////////////////////////////////////////////////
//  TemperaturePolynomialLimit.cs
//  Implementation of the Class TemperaturePolynomialLimit
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:25 AM
//  Original author: akamath
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.InfIEC61970.InfOperationalLimits;
namespace TC57CIM.IEC61970.InfIEC61970.InfOperationalLimits {
	/// <summary>
	/// This describes the coefficients of a polynomial function that has temperature
	/// as input and calculates limit values as output.
	/// </summary>
	public class TemperaturePolynomialLimit : EnvironmentalDependentLimit {

		/// <summary>
		/// The polinomial coefficent of power 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float coefficient0;
		/// <summary>
		/// The polinomial coefficent of power 1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float coefficient1;
		/// <summary>
		/// The polinomial coefficent of power 2.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float coefficient2;
		/// <summary>
		/// The polinomial coefficent of power 3.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float coefficient3;
		/// <summary>
		/// The polinomial coefficent of power 4.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float coefficient4;

		public TemperaturePolynomialLimit(){

		}

		~TemperaturePolynomialLimit(){

		}

		public override void Dispose(){

		}

	}//end TemperaturePolynomialLimit

}//end namespace InfOperationalLimits