///////////////////////////////////////////////////////////
//  LoadMotor.cs
//  Implementation of the Class LoadMotor
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:06 AM
//  Original author: tsaxton
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.Dynamics.StandardModels.LoadDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.LoadDynamics {
	/// <summary>
	/// Aggregate induction motor load. This model is used to represent a fraction of
	/// an ordinary load as "induction motor load".  It allows a load that is treated
	/// as an ordinary constant power in power flow analysis to be represented by an
	/// induction motor in dynamic simulation. This model is intended for
	/// representation of aggregations of many motors dispersed through a load
	/// represented at a high voltage bus but where there is no information on the
	/// characteristics of individual motors.
	/// Either a "one-cage" or "two-cage" model of the induction machine can be
	/// modelled. Magnetic saturation is not modelled.
	/// This model treats a fraction of the constant power part of a load as a motor.
	/// During initialisation, the initial power drawn by the motor is set equal to
	/// <i>Pfrac</i> times the constant <i>P</i> part of the static load.  The
	/// remainder of the load is left as a static load.
	/// The reactive power demand of the motor is calculated during initialisation as a
	/// function of voltage at the load bus. This reactive power demand can be less
	/// than or greater than the constant <i>Q</i> component of the load.  If the
	/// motor's reactive demand is greater than the constant <i>Q</i> component of the
	/// load, the model inserts a shunt capacitor at the terminal of the motor to bring
	/// its reactive demand down to equal the constant <i>Q</i> reactive load.
	/// If an induction motor load model and a static load model are both present for a
	/// load, the motor <i>Pfrac</i> is assumed to be subtracted from the power flow
	/// constant <i>P</i> load before the static load model is applied.  The remainder
	/// of the load, if any, is then represented by the static load model.
	/// </summary>
	public class LoadMotor : IdentifiedObject {

		/// <summary>
		/// Damping factor (<i>D</i>).  Unit = delta <i>P</i>/delta speed.  Typical value =
		/// 2.
		/// </summary>
		public float d;
		/// <summary>
		/// Inertia constant (<i>H</i>) (>= 0).  Typical value = 0,4.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds h;
		/// <summary>
		/// Loading factor (<i>Lfac</i>). The ratio of initial <i>P</i> to motor MVA base.
		/// Typical value = 0,8.
		/// </summary>
		public float lfac;
		/// <summary>
		/// Transient reactance (<i>Lp</i>).  Typical value = 0,15.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU lp;
		/// <summary>
		/// Subtransient reactance (<i>Lpp</i>).  Typical value = 0,15.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU lpp;
		/// <summary>
		/// Synchronous reactance (<i>Ls</i>).  Typical value = 3,2.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU ls;
		/// <summary>
		/// Fraction of constant-power load to be represented by this motor model
		/// (<i>Pfrac</i>) (>= 0,0 and <= 1,0).  Typical value = 0,3.
		/// </summary>
		public float pfrac;
		/// <summary>
		/// Stator resistance (<i>Ra</i>).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU ra;
		/// <summary>
		/// Circuit breaker operating time (<i>Tbkr</i>) (>= 0).  Typical value = 0,08.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tbkr;
		/// <summary>
		/// Transient rotor time constant (<i>Tpo</i>) (>= 0).  Typical value = 1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tpo;
		/// <summary>
		/// Subtransient rotor time constant (<i>Tppo</i>) (>= 0).  Typical value = 0,02.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tppo;
		/// <summary>
		/// Voltage trip pickup time (<i>Tv</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tv;
		/// <summary>
		/// Voltage threshold for tripping (<i>Vt</i>).  Typical value = 0,7.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vt;
		/// <summary>
		/// Aggregate load to which this aggregate motor (dynamic) load belongs.
		/// </summary>
		public TC57CIM.IEC61970.Dynamics.StandardModels.LoadDynamics.LoadAggregate LoadAggregate;

		public LoadMotor(){

		}

		~LoadMotor(){

		}

		public override void Dispose(){

		}

	}//end LoadMotor

}//end namespace LoadDynamics