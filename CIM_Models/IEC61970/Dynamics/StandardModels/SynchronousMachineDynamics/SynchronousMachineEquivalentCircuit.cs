///////////////////////////////////////////////////////////
//  SynchronousMachineEquivalentCircuit.cs
//  Implementation of the Class SynchronousMachineEquivalentCircuit
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:24 AM
//  Original author: ppbr003
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Dynamics.StandardModels.SynchronousMachineDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.SynchronousMachineDynamics {
	/// <summary>
	/// The electrical equations for all variations of the synchronous models are based
	/// on the SynchronousEquivalentCircuit diagram for the direct- and quadrature-
	/// axes.
	/// Equations for conversion between equivalent circuit and time constant reactance
	/// forms:
	/// <i>Xd</i> = <i>Xad </i>+<i> Xl</i>
	/// <i>X’d</i> = <i>Xl</i> + <i>Xad</i> x <i>Xfd</i> / (<i>Xad</i> + <i>Xfd</i>)
	/// <i>X”d</i> = <i>Xl</i> + <i>Xad</i> x <i>Xfd</i> x <i>X1d</i> / (<i>Xad</i> x
	/// <i>Xfd</i> + <i>Xad</i> x <i>X1d</i> + <i>Xfd</i> x <i>X1d</i>)
	/// <i>Xq</i> = <i>Xaq</i> + <i>Xl</i>
	/// <i>X’q</i> = <i>Xl</i> + <i>Xaq</i> x <i>X1q</i> / (<i>Xaq</i> + <i>X1q</i>)
	/// <i>X”q</i> = <i>Xl</i> + <i>Xaq</i> x <i>X1q</i> x <i>X2q</i> / (<i>Xaq</i> x
	/// <i>X1q</i> + <i>Xaq</i> x <i>X2q</i> + <i>X1q</i> x <i>X2q</i>)
	/// <i>T’do</i> = (<i>Xad</i> + <i>Xfd</i>) / (<i>omega</i><i><sub>0</sub></i> x
	/// <i>Rfd</i>)
	/// <i>T”do</i> = (<i>Xad</i> x <i>Xfd</i> + <i>Xad</i> x <i>X1d</i> + <i>Xfd</i> x
	/// <i>X1d</i>) / (<i>omega</i><i><sub>0</sub></i> x <i>R1d</i> x (<i>Xad</i> +
	/// <i>Xfd</i>)
	/// <i>T’qo</i> = (<i>Xaq</i> + <i>X1q</i>) / (<i>omega</i><i><sub>0</sub></i> x
	/// <i>R1q</i>)
	/// <i>T”qo</i> = (<i>Xaq</i> x <i>X1q</i> + <i>Xaq</i> x <i>X2q</i> + <i>X1q</i> x
	/// <i>X2q</i>) / (<i>omega</i><i><sub>0</sub></i> x <i>R2q</i> x (<i>Xaq</i> +
	/// <i>X1q</i>)
	/// Same equations using CIM attributes from
	/// SynchronousMachineTimeConstantReactance class on left of "=" and
	/// SynchronousMachineEquivalentCircuit class on right (except as noted):
	/// xDirectSync = xad + RotatingMachineDynamics.statorLeakageReactance
	/// xDirectTrans = RotatingMachineDynamics.statorLeakageReactance + xad x xfd /
	/// (xad + xfd)
	/// xDirectSubtrans = RotatingMachineDynamics.statorLeakageReactance + xad x xfd x
	/// x1d / (xad x xfd + xad x x1d + xfd x x1d)
	/// xQuadSync = xaq + RotatingMachineDynamics.statorLeakageReactance
	/// xQuadTrans = RotatingMachineDynamics.statorLeakageReactance + xaq x x1q / (xaq+
	/// x1q)
	/// xQuadSubtrans = RotatingMachineDynamics.statorLeakageReactance + xaq x x1q x
	/// x2q / (xaq x x1q + xaq x x2q + x1q x x2q)
	/// tpdo = (xad + xfd) / (2 x pi x nominal frequency x rfd)
	/// tppdo = (xad x xfd + xad x x1d + xfd x x1d) / (2 x pi x nominal frequency x r1d
	/// x (xad + xfd)
	/// tpqo = (xaq + x1q) / (2 x pi x nominal frequency x r1q)
	/// tppqo = (xaq x x1q + xaq x x2q + x1q x x2q) / (2 x pi x nominal frequency x r2q
	/// x (xaq + x1q)
	/// These are only valid for a simplified model where "Canay" reactance is zero.
	/// </summary>
	public class SynchronousMachineEquivalentCircuit : SynchronousMachineDetailed {

		/// <summary>
		/// Direct-axis damper 1 winding resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU r1d;
		/// <summary>
		/// Quadrature-axis damper 1 winding resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU r1q;
		/// <summary>
		/// Quadrature-axis damper 2 winding resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU r2q;
		/// <summary>
		/// Field winding resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU rfd;
		/// <summary>
		/// Direct-axis damper 1 winding leakage reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU x1d;
		/// <summary>
		/// Quadrature-axis damper 1 winding leakage reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU x1q;
		/// <summary>
		/// Quadrature-axis damper 2 winding leakage reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU x2q;
		/// <summary>
		/// Direct-axis mutual reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xad;
		/// <summary>
		/// Quadrature-axis mutual reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xaq;
		/// <summary>
		/// Differential mutual (“Canay”) reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xf1d;
		/// <summary>
		/// Field winding leakage reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xfd;

		public SynchronousMachineEquivalentCircuit(){

		}

		~SynchronousMachineEquivalentCircuit(){

		}

		public override void Dispose(){

		}

	}//end SynchronousMachineEquivalentCircuit

}//end namespace SynchronousMachineDynamics