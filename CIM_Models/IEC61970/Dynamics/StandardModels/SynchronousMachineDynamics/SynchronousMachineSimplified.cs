///////////////////////////////////////////////////////////
//  SynchronousMachineSimplified.cs
//  Implementation of the Class SynchronousMachineSimplified
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:24 AM
//  Original author: ppbr003
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Dynamics.StandardModels.SynchronousMachineDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.SynchronousMachineDynamics {
	/// <summary>
	/// The simplified model represents a synchronous generator as a constant internal
	/// voltage behind an impedance<i> </i>(<i>Rs + jXp</i>) as shown in the Simplified
	/// diagram.
	/// Since internal voltage is held constant, there is no <i>Efd</i> input and any
	/// excitation system model will be ignored.  There is also no <i>Ifd</i> output.
	/// This model should not be used for representing a real generator except, perhaps,
	/// small generators whose response is insignificant.
	/// The parameters used for the simplified model include:
	/// - RotatingMachineDynamics.damping (<i>D</i>);
	/// - RotatingMachineDynamics.inertia (<i>H</i>);
	/// - RotatingMachineDynamics.statorLeakageReactance (used to exchange <i>jXp
	/// </i>for SynchronousMachineSimplified);
	/// - RotatingMachineDynamics.statorResistance (<i>Rs</i>).
	/// </summary>
	public class SynchronousMachineSimplified : SynchronousMachineDynamics {

		public SynchronousMachineSimplified(){

		}

		~SynchronousMachineSimplified(){

		}

		public override void Dispose(){

		}

	}//end SynchronousMachineSimplified

}//end namespace SynchronousMachineDynamics