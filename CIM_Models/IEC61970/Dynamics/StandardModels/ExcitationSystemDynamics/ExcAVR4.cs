///////////////////////////////////////////////////////////
//  ExcAVR4.cs
//  Implementation of the Class ExcAVR4
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:52 AM
//  Original author: pcha006
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Dynamics.StandardModels.ExcitationSystemDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.ExcitationSystemDynamics {
	/// <summary>
	/// Italian excitation system. It represents a static exciter and electric voltage
	/// regulator.
	/// </summary>
	public class ExcAVR4 : ExcitationSystemDynamics {

		/// <summary>
		/// AVR output voltage dependency selector (<i>I</i><i><sub>MUL</sub></i>).
		/// true = selector is connected
		/// false = selector is not connected.
		/// Typical value = true.
		/// </summary>
		public bool imul;
		/// <summary>
		/// AVR gain (<i>K</i><i><sub>A</sub></i>).  Typical value = 300.
		/// </summary>
		public float ka;
		/// <summary>
		/// Exciter gain (<i>K</i><i><sub>E</sub></i><i>)</i>.  Typical value = 1.
		/// </summary>
		public float ke;
		/// <summary>
		/// Exciter internal reactance (<i>K</i><i><sub>IF</sub></i>).  Typical value = 0.
		/// </summary>
		public float kif;
		/// <summary>
		/// AVR time constant (<i>T</i><i><sub>1</sub></i>) (>= 0).  Typical value = 4,8.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t1;
		/// <summary>
		/// Exciter current feedback time constant (<i>T</i><i><sub>1IF</sub></i>) (>= 0).
		/// Typical value = 60.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t1if;
		/// <summary>
		/// AVR time constant (<i>T</i><i><sub>2</sub></i>) (>= 0).  Typical value = 1,5.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t2;
		/// <summary>
		/// AVR time constant (<i>T</i><i><sub>3</sub></i>) (>= 0).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t3;
		/// <summary>
		/// AVR time constant (<i>T</i><i><sub>4</sub></i>) (>= 0).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t4;
		/// <summary>
		/// Exciter current feedback time constant (<i>T</i><i><sub>IF</sub></i>) (>= 0).
		/// Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tif;
		/// <summary>
		/// Minimum exciter output (<i>V</i><i><sub>FMN</sub></i>).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vfmn;
		/// <summary>
		/// Maximum exciter output (<i>V</i><i><sub>FMX</sub></i>).  Typical value = 5.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vfmx;
		/// <summary>
		/// Minimum AVR output (<i>V</i><i><sub>RMN</sub></i>).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vrmn;
		/// <summary>
		/// Maximum AVR output (<i>V</i><i><sub>RMX</sub></i>).  Typical value = 5.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vrmx;

		public ExcAVR4(){

		}

		~ExcAVR4(){

		}

		public override void Dispose(){

		}

	}//end ExcAVR4

}//end namespace ExcitationSystemDynamics