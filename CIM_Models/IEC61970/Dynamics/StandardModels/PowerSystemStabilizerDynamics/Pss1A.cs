///////////////////////////////////////////////////////////
//  Pss1A.cs
//  Implementation of the Class Pss1A
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:16 AM
//  Original author: pcha006
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Dynamics.StandardModels.PowerSystemStabilizerDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.PowerSystemStabilizerDynamics {
	/// <summary>
	/// Single input power system stabilizer. It is a modified version in order to
	/// allow representation of various vendors' implementations on PSS type 1A.
	/// </summary>
	public class Pss1A : PowerSystemStabilizerDynamics {

		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>1</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a1;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>2</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a2;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>3</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a3;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>4</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a4;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>5</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a5;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>6</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a6;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>7</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a7;
		/// <summary>
		/// Notch filter parameter (<i>A</i><i><sub>8</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU a8;
		/// <summary>
		/// Type of input signal (rotorAngularFrequencyDeviation, busFrequencyDeviation,
		/// generatorElectricalPower, generatorAcceleratingPower, busVoltage, or
		/// busVoltageDerivative).
		/// </summary>
		public InputSignalKind inputSignalType;
		/// <summary>
		/// Selector (<i>Kd</i>).
		/// true = e<sup>-sTdelay</sup> used
		/// false = e<sup>-sTdelay</sup> not used.
		/// </summary>
		public bool kd;
		/// <summary>
		/// Stabilizer gain (<i>K</i><i><sub>s</sub></i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU ks;
		/// <summary>
		/// Lead/lag time constant (<i>T</i><i><sub>1</sub></i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t1;
		/// <summary>
		/// Lead/lag time constant (<i>T</i><i><sub>2</sub></i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t2;
		/// <summary>
		/// Lead/lag time constant (<i>T</i><i><sub>3</sub></i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t3;
		/// <summary>
		/// Lead/lag time constant (<i>T</i><i><sub>4</sub></i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t4;
		/// <summary>
		/// Washout time constant (<i>T</i><i><sub>5</sub></i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t5;
		/// <summary>
		/// Transducer time constant (<i>T</i><i><sub>6</sub></i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t6;
		/// <summary>
		/// Time constant (<i>Tdelay</i>) (>= 0).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tdelay;
		/// <summary>
		/// Stabilizer input cutoff threshold (<i>Vcl</i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vcl;
		/// <summary>
		/// Stabilizer input cutoff threshold (<i>Vcu</i>).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vcu;
		/// <summary>
		/// Maximum stabilizer output (<i>Vrmax</i>) (> Pss1A.vrmin).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vrmax;
		/// <summary>
		/// Minimum stabilizer output (<i>Vrmin</i>) (< Pss1A.vrmax).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU vrmin;

		public Pss1A(){

		}

		~Pss1A(){

		}

		public override void Dispose(){

		}

	}//end Pss1A

}//end namespace PowerSystemStabilizerDynamics