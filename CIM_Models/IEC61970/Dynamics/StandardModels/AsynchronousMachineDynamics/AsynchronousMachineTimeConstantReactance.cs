///////////////////////////////////////////////////////////
//  AsynchronousMachineTimeConstantReactance.cs
//  Implementation of the Class AsynchronousMachineTimeConstantReactance
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:40 AM
//  Original author: ppbr003
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Dynamics.StandardModels.AsynchronousMachineDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.AsynchronousMachineDynamics {
	/// <summary>
	/// Parameter details:
	/// <ol>
	/// 	<li>If <i>X'' </i>=<i> X'</i>, a single cage (one equivalent rotor winding per
	/// axis) is modelled.</li>
	/// 	<li>The “<i>p</i>” in the attribute names is a substitution for a “prime” in
	/// the usual parameter notation, e.g. <i>tpo</i> refers to <i>T'o</i>.</li>
	/// </ol>
	/// The parameters used for models expressed in time constant reactance form
	/// include:
	/// - RotatingMachine.ratedS (<i>MVAbase</i>);
	/// - RotatingMachineDynamics.damping (<i>D</i>);
	/// - RotatingMachineDynamics.inertia (<i>H</i>);
	/// - RotatingMachineDynamics.saturationFactor (<i>S1</i>);
	/// - RotatingMachineDynamics.saturationFactor120 (<i>S12</i>);
	/// - RotatingMachineDynamics.statorLeakageReactance (<i>Xl</i>);
	/// - RotatingMachineDynamics.statorResistance (<i>Rs</i>);
	/// - .xs (<i>Xs</i>);
	/// - .xp (<i>X'</i>);
	/// - .xpp (<i>X''</i>);
	/// - .tpo (<i>T'o</i>);
	/// - .tppo (<i>T''o</i>).
	/// </summary>
	public class AsynchronousMachineTimeConstantReactance : AsynchronousMachineDynamics {

		/// <summary>
		/// Transient rotor time constant (<i>T'o</i>) (>
		/// AsynchronousMachineTimeConstantReactance.tppo).  Typical value = 5.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tpo;
		/// <summary>
		/// Subtransient rotor time constant (<i>T''o</i>) (> 0).  Typical value = 0,03.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tppo;
		/// <summary>
		/// Transient reactance (unsaturated) (<i>X'</i>) (>=
		/// AsynchronousMachineTimeConstantReactance.xpp).  Typical value = 0,5.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xp;
		/// <summary>
		/// Subtransient reactance (unsaturated) (<i>X''</i>) (> RotatingMachineDynamics.
		/// statorLeakageReactance).  Typical value = 0,2.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xpp;
		/// <summary>
		/// Synchronous reactance (<i>Xs</i>) (>= AsynchronousMachineTimeConstantReactance.
		/// xp).  Typical value = 1,8.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU xs;

		public AsynchronousMachineTimeConstantReactance(){

		}

		~AsynchronousMachineTimeConstantReactance(){

		}

		public override void Dispose(){

		}

	}//end AsynchronousMachineTimeConstantReactance

}//end namespace AsynchronousMachineDynamics