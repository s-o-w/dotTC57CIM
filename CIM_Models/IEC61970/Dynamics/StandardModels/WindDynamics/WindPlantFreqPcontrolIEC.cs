///////////////////////////////////////////////////////////
//  WindPlantFreqPcontrolIEC.cs
//  Implementation of the Class WindPlantFreqPcontrolIEC
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:32 AM
//  Original author: civanov
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics {
	/// <summary>
	/// Frequency and active power controller model.
	/// Reference: IEC 61400-27-1:2015, Annex D.
	/// </summary>
	public class WindPlantFreqPcontrolIEC : IdentifiedObject {

		/// <summary>
		/// Maximum ramp rate of <i>p</i><i><sub>WTref</sub></i> request from the plant
		/// controller to the wind turbines (<i>dp</i><i><sub>refmax</sub></i>) (>
		/// WindPlantFreqPcontrolIEC.dprefmin). It is a case-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dprefmax;
		/// <summary>
		/// Minimum (negative) ramp rate of <i>p</i><i><sub>WTref</sub></i> request from
		/// the plant controller to the wind turbines (<i>dp</i><i><sub>refmin</sub></i>)
		/// (< WindPlantFreqPcontrolIEC.dprefmax). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dprefmin;
		/// <summary>
		/// Maximum positive ramp rate for wind plant power reference
		/// (<i>dp</i><i><sub>WPrefmax</sub></i>) (> WindPlantFreqPcontrolIEC.dpwprefmin).
		/// It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpwprefmax;
		/// <summary>
		/// Maximum negative ramp rate for wind plant power reference
		/// (<i>dp</i><i><sub>WPrefmin</sub></i>) (< WindPlantFreqPcontrolIEC.dpwprefmax).
		/// It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpwprefmin;
		/// <summary>
		/// Plant P controller integral gain (<i>K</i><i><sub>IWPp</sub></i>). It is a
		/// project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float kiwpp;
		/// <summary>
		/// Maximum PI integrator term (<i>K</i><i><sub>IWPpmax</sub></i>) (>
		/// WindPlantFreqPcontrolIEC.kiwppmin). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kiwppmax;
		/// <summary>
		/// Minimum PI integrator term (<i>K</i><i><sub>IWPpmin</sub></i>) (<
		/// WindPlantFreqPcontrolIEC.kiwppmax). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kiwppmin;
		/// <summary>
		/// Plant P controller proportional gain (<i>K</i><i><sub>PWPp</sub></i>). It is a
		/// project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float kpwpp;
		/// <summary>
		/// Power reference gain (<i>K</i><i><sub>WPpref</sub></i>). It is a project-
		/// dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kwppref;
		/// <summary>
		/// Maximum <i>p</i><i><sub>WTref</sub></i> request from the plant controller to
		/// the wind turbines (<i>p</i><i><sub>refmax</sub></i>) (>
		/// WindPlantFreqPcontrolIEC.prefmin). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU prefmax;
		/// <summary>
		/// Minimum <i>p</i><i><sub>WTref</sub></i> request from the plant controller to
		/// the wind turbines (<i>p</i><i><sub>refmin</sub></i>) (<
		/// WindPlantFreqPcontrolIEC.prefmax). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU prefmin;
		/// <summary>
		/// Lead time constant in reference value transfer function
		/// (<i>T</i><i><sub>pft</sub></i>) (>= 0). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tpft;
		/// <summary>
		/// Lag time constant in reference value transfer function
		/// (<i>T</i><i><sub>pfv</sub></i>) (>= 0). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tpfv;
		/// <summary>
		/// Filter time constant for frequency measurement
		/// (<i>T</i><i><sub>WPffiltp</sub></i>) (>= 0). It is a project-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds twpffiltp;
		/// <summary>
		/// Filter time constant for active power measurement
		/// (<i>T</i><i><sub>WPpfiltp</sub></i>) (>= 0). It is a project-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds twppfiltp;
		/// <summary>
		/// Wind plant model with which this wind plant frequency and active power control
		/// is associated.
		/// </summary>
		public TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics.WindPlantIEC WindPlantIEC;

		public WindPlantFreqPcontrolIEC(){

		}

		~WindPlantFreqPcontrolIEC(){

		}

		public override void Dispose(){

		}

	}//end WindPlantFreqPcontrolIEC

}//end namespace WindDynamics