///////////////////////////////////////////////////////////
//  WindContPType3IEC.cs
//  Implementation of the Class WindContPType3IEC
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:30 AM
//  Original author: ppbr003
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics {
	/// <summary>
	/// P control model type 3.
	/// Reference: IEC 61400-27-1:2015, 5.6.5.4.
	/// </summary>
	public class WindContPType3IEC : IdentifiedObject {

		/// <summary>
		/// Maximum wind turbine power ramp rate (<i>dp</i><i><sub>max</sub></i>). It is a
		/// type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpmax;
		/// <summary>
		/// Maximum ramp rate of wind turbine reference power
		/// (<i>dp</i><i><sub>refmax</sub></i>). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dprefmax;
		/// <summary>
		/// Minimum ramp rate of wind turbine reference power
		/// (<i>dp</i><i><sub>refmin</sub></i>). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dprefmin;
		/// <summary>
		/// Ramp limitation of torque, required in some grid codes
		/// (<i>dt</i><i><sub>max</sub></i>). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dthetamax;
		/// <summary>
		/// Limitation of torque rise rate during UVRT
		/// (<i>dtheta</i><i><sub>maxUVRT</sub></i>). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dthetamaxuvrt;
		/// <summary>
		/// Gain for active drive train damping (<i>K</i><i><sub>DTD</sub></i>). It is a
		/// type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kdtd;
		/// <summary>
		/// PI controller integration parameter (<i>K</i><sub>Ip</sub>). It is a type-
		/// dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kip;
		/// <summary>
		/// PI controller proportional gain (<i>K</i><sub>Pp</sub>). It is a type-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kpp;
		/// <summary>
		/// Enable UVRT power control mode (<i>M</i><i><sub>pUVRT</sub></i><sub>)</sub>.
		/// It is a project-dependent parameter.
		/// true = voltage control (1 in the IEC model)
		/// false = reactive power control (0 in the IEC model).
		/// </summary>
		public bool mpuvrt;
		/// <summary>
		/// Active drive train damping frequency (<i>omega</i><i><sub>DTD</sub></i>). It
		/// can be calculated from two mass model parameters. It is a type-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU omegadtd;
		/// <summary>
		/// Offset to reference value that limits controller action during rotor speed
		/// changes (<i>omega</i><i><sub>offset</sub></i>). It is a case-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU omegaoffset;
		/// <summary>
		/// Maximum active drive train damping power (<i>p</i><sub>DTDmax</sub>). It is a
		/// type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU pdtdmax;
		/// <summary>
		/// Time<sub> </sub>delay after deep voltage sags (<i>T</i><i><sub>DVS</sub></i>)
		/// (>= 0). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tdvs;
		/// <summary>
		/// Minimum electrical generator torque (<i>t</i><sub>emin</sub>). It is a type-
		/// dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU thetaemin;
		/// <summary>
		/// Voltage scaling factor of reset-torque (<i>t</i><sub>uscale</sub>). It is a
		/// project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU thetauscale;
		/// <summary>
		/// Filter time constant for generator speed measurement
		/// (<i>T</i><sub>omegafiltp3</sub>) (>= 0). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tomegafiltp3;
		/// <summary>
		/// Time constant in speed reference filter (<i>T</i><sub>omega,ref</sub>) (>= 0).
		/// It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tomegaref;
		/// <summary>
		/// Filter time constant for power measurement (<i>T</i><sub>pfiltp3</sub>) (>= 0).
		/// It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tpfiltp3;
		/// <summary>
		/// Time constant in power order lag (<i>T</i><sub>pord</sub>). It is a type-
		/// dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU tpord;
		/// <summary>
		/// Filter time constant for voltage measurement (<i>T</i><sub>ufiltp3</sub>) (>=
		/// 0). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tufiltp3;
		/// <summary>
		/// Voltage limit for hold UVRT status after deep voltage sags
		/// (<i>u</i><i><sub>DVS</sub></i>). It is a project-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU udvs;
		/// <summary>
		/// Voltage dip threshold for P-control (<i>u</i><sub>Pdip</sub>).  Part of turbine
		/// control, often different (e.g 0.8) from converter thresholds. It is a project-
		/// dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU updip;
		/// <summary>
		/// Coefficient for active drive train damping (<i>zeta</i>). It is a type-
		/// dependent parameter.
		/// </summary>
		public float zeta;
		/// <summary>
		/// Wind turbine type 3 model with which this wind control P type 3 model is
		/// associated.
		/// </summary>
		public TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics.WindTurbineType3IEC WindTurbineType3IEC;

		public WindContPType3IEC(){

		}

		~WindContPType3IEC(){

		}

		public override void Dispose(){

		}

	}//end WindContPType3IEC

}//end namespace WindDynamics