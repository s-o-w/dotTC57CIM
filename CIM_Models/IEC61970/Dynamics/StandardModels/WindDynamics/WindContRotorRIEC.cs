///////////////////////////////////////////////////////////
//  WindContRotorRIEC.cs
//  Implementation of the Class WindContRotorRIEC
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:30 AM
//  Original author: ppbr003
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics {
	/// <summary>
	/// Rotor resistance control model.
	/// Reference: IEC 61400-27-1:2015, 5.6.5.3.
	/// </summary>
	public class WindContRotorRIEC : IdentifiedObject {

		/// <summary>
		/// Integral gain in rotor resistance PI controller (<i>K</i><i><sub>Irr</sub></i>).
		/// It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kirr;
		/// <summary>
		/// Filter gain for generator speed measurement
		/// (<i>K</i><i><sub>omegafilt</sub></i>). It is a type-dependent parameter.
		/// </summary>
		public float komegafilt;
		/// <summary>
		/// Filter gain for power measurement (<i>K</i><i><sub>pfilt</sub></i>). It is a
		/// type-dependent parameter.
		/// </summary>
		public float kpfilt;
		/// <summary>
		/// Proportional gain in rotor resistance PI controller
		/// (<i>K</i><i><sub>Prr</sub></i>). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU kprr;
		/// <summary>
		/// Maximum rotor resistance (<i>r</i><i><sub>max</sub></i>) (> WindContRotorRIEC.
		/// rmin). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU rmax;
		/// <summary>
		/// Minimum rotor resistance (<i>r</i><i><sub>min</sub></i>) (< WindContRotorRIEC.
		/// rmax). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU rmin;
		/// <summary>
		/// Filter time constant for generator speed measurement
		/// (<i>T</i><i><sub>omegafiltrr</sub></i>) (>= 0). It is a type-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tomegafiltrr;
		/// <summary>
		/// Filter time constant for power measurement (<i>T</i><i><sub>pfiltrr</sub></i>)
		/// (>= 0). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tpfiltrr;
		/// <summary>
		/// Wind turbine type 2 model with whitch this wind control rotor resistance model
		/// is associated.
		/// </summary>
		public TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics.WindGenTurbineType2IEC WindGenTurbineType2IEC;

		public WindContRotorRIEC(){

		}

		~WindContRotorRIEC(){

		}

		public override void Dispose(){

		}

	}//end WindContRotorRIEC

}//end namespace WindDynamics