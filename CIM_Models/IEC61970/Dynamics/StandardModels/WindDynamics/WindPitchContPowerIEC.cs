///////////////////////////////////////////////////////////
//  WindPitchContPowerIEC.cs
//  Implementation of the Class WindPitchContPowerIEC
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:31 AM
//  Original author: civanov
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics {
	/// <summary>
	/// Pitch control power model.
	/// Reference: IEC 61400-27-1:2015, 5.6.5.1.
	/// </summary>
	public class WindPitchContPowerIEC : IdentifiedObject {

		/// <summary>
		/// Rate limit for increasing power (<i>dp</i><i><sub>max</sub></i>) (>
		/// WindPitchContPowerIEC.dpmin). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpmax;
		/// <summary>
		/// Rate limit for decreasing power (<i>dp</i><i><sub>min</sub></i>) (<
		/// WindPitchContPowerIEC.dpmax). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpmin;
		/// <summary>
		/// Minimum power setting (<i>p</i><i><sub>min</sub></i>). It is a type-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU pmin;
		/// <summary>
		/// If <i>p</i><i><sub>init</sub></i><sub> </sub><
		/// <i>p</i><i><sub>set</sub></i><sub> </sub>then power will be ramped down to
		/// <i>p</i><i><sub>min</sub></i>. It is (<i>p</i><i><sub>set</sub></i>) in the IEC
		/// 61400-27-1:2015. It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU pset;
		/// <summary>
		/// Lag time constant (<i>T</i><i><sub>1</sub></i>) (>= 0). It is a type-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t1;
		/// <summary>
		/// Voltage measurement time constant (<i>T</i><i><sub>r</sub></i>) (>= 0). It is a
		/// type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds tr;
		/// <summary>
		/// Dip detection threshold (<i>u</i><i><sub>UVRT</sub></i>). It is a type-
		/// dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU uuvrt;
		/// <summary>
		/// Wind turbine type 2 model with which this pitch control power model is
		/// associated.
		/// </summary>
		public TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics.WindGenTurbineType2IEC WindGenTurbineType2IEC;

		public WindPitchContPowerIEC(){

		}

		~WindPitchContPowerIEC(){

		}

		public override void Dispose(){

		}

	}//end WindPitchContPowerIEC

}//end namespace WindDynamics