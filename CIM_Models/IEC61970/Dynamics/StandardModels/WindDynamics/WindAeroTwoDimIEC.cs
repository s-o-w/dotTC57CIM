///////////////////////////////////////////////////////////
//  WindAeroTwoDimIEC.cs
//  Implementation of the Class WindAeroTwoDimIEC
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:30 AM
//  Original author: ppbr003
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics {
	/// <summary>
	/// Two-dimensional aerodynamic model.
	/// Reference: IEC 61400-27-1:2015, 5.6.1.3.
	/// </summary>
	public class WindAeroTwoDimIEC : IdentifiedObject {

		/// <summary>
		/// Partial derivative of aerodynamic power with respect to changes in WTR speed
		/// (<i>dp</i><i><sub>omega</sub></i>). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpomega;
		/// <summary>
		/// Partial derivative of aerodynamic power with respect to changes in pitch angle
		/// (<i>dp</i><i><sub>theta</sub></i>). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dptheta;
		/// <summary>
		/// Partial derivative (<i>dp</i><i><sub>v1</sub></i>). It is a type-dependent
		/// parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dpv1;
		/// <summary>
		/// Rotor speed if the wind turbine is not derated
		/// (<i>omega</i><i><sub>0</sub></i>). It is a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU omegazero;
		/// <summary>
		/// Available aerodynamic power (<i>p</i><i><sub>avail</sub></i><i>)</i>. It is a
		/// case-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU pavail;
		/// <summary>
		/// Blade angle at twice rated wind speed (<i>theta</i><i><sub>v2</sub></i>). It is
		/// a type-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.AngleDegrees thetav2;
		/// <summary>
		/// Pitch angle if the wind turbine is not derated
		/// (<i>theta</i><i><sub>0</sub></i>). It is a case-dependent parameter.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.AngleDegrees thetazero;
		/// <summary>
		/// Wind turbine type 3 model with which this wind aerodynamic model is associated.
		/// 
		/// </summary>
		public TC57CIM.IEC61970.Dynamics.StandardModels.WindDynamics.WindTurbineType3IEC WindTurbineType3IEC;

		public WindAeroTwoDimIEC(){

		}

		~WindAeroTwoDimIEC(){

		}

		public override void Dispose(){

		}

	}//end WindAeroTwoDimIEC

}//end namespace WindDynamics