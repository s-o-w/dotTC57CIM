///////////////////////////////////////////////////////////
//  GovSteamCC.cs
//  Implementation of the Class GovSteamCC
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:00 AM
//  Original author: tsaxton
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Dynamics.StandardModels.TurbineGovernorDynamics;
namespace TC57CIM.IEC61970.Dynamics.StandardModels.TurbineGovernorDynamics {
	/// <summary>
	/// Cross compound turbine governor.  Unlike tandem compound units, cross compound
	/// units are not on the same shaft.
	/// </summary>
	public class GovSteamCC : CrossCompoundTurbineGovernorDynamics {

		/// <summary>
		/// HP damping factor (<i>Dhp</i>).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dhp;
		/// <summary>
		/// LP damping factor (<i>Dlp</i>).  Typical value = 0.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU dlp;
		/// <summary>
		/// Fraction of HP power ahead of reheater (<i>Fhp</i>).  Typical value = 0,3.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU fhp;
		/// <summary>
		/// Fraction of LP power ahead of reheater (<i>Flp</i>).  Typical value = 0,7.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU flp;
		/// <summary>
		/// Base for power values (<i>MWbase</i>) (> 0).  Unit = MW.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower mwbase;
		/// <summary>
		/// Maximum HP value position (<i>Pmaxhp</i>).  Typical value = 1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU pmaxhp;
		/// <summary>
		/// Maximum LP value position (<i>Pmaxlp</i>).  Typical value = 1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU pmaxlp;
		/// <summary>
		/// HP governor droop (<i>Rhp</i>) (> 0).  Typical value = 0,05.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU rhp;
		/// <summary>
		/// LP governor droop (<i>Rlp</i>) (> 0).  Typical value = 0,05.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PU rlp;
		/// <summary>
		/// HP governor time constant (<i>T1hp</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t1hp;
		/// <summary>
		/// LP governor time constant (<i>T1lp</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t1lp;
		/// <summary>
		/// HP turbine time constant (<i>T3hp</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t3hp;
		/// <summary>
		/// LP turbine time constant (<i>T3lp</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t3lp;
		/// <summary>
		/// HP turbine time constant (<i>T4hp</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t4hp;
		/// <summary>
		/// LP turbine time constant (<i>T4lp</i>) (>= 0).  Typical value = 0,1.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t4lp;
		/// <summary>
		/// HP reheater time constant (<i>T5hp</i>) (>= 0).  Typical value = 10.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t5hp;
		/// <summary>
		/// LP reheater time constant (<i>T5lp</i>) (>= 0).  Typical value = 10.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Seconds t5lp;

		public GovSteamCC(){

		}

		~GovSteamCC(){

		}

		public override void Dispose(){

		}

	}//end GovSteamCC

}//end namespace TurbineGovernorDynamics