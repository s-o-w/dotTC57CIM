///////////////////////////////////////////////////////////
//  Diagram.cs
//  Implementation of the Class Diagram
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:48 AM
//  Original author: mcmorran
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.DiagramLayout;
using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.Base.DiagramLayout {
	/// <summary>
	/// The diagram being exchanged. The coordinate system is a standard Cartesian
	/// coordinate system and the orientation attribute defines the orientation. The
	/// initial view related attributes can be used to specify an initial view with the
	/// x,y coordinates of the diagonal points.
	/// </summary>
	public class Diagram : IdentifiedObject {

		/// <summary>
		/// Coordinate system orientation of the diagram. A positive orientation gives
		/// standard �right-hand� orientation, with negative orientation indicating a �left-
		/// hand� orientation. For 2D diagrams, a positive orientation will result in X
		/// values increasing from left to right and Y values increasing from bottom to top.
		/// A negative orientation gives the �left-hand� orientation (favoured by computer
		/// graphics displays) with X values increasing from left to right and Y values
		/// increasing from top to bottom.
		/// </summary>
		public OrientationKind orientation;
		/// <summary>
		/// X coordinate of the first corner of the initial view.
		/// </summary>
		public float x1InitialView;
		/// <summary>
		/// X coordinate of the second corner of the initial view.
		/// </summary>
		public float x2InitialView;
		/// <summary>
		/// Y coordinate of the first corner of the initial view.
		/// </summary>
		public float y1InitialView;
		/// <summary>
		/// Y coordinate of the second corner of the initial view.
		/// </summary>
		public float y2InitialView;

		public Diagram(){

		}

		~Diagram(){

		}

		public override void Dispose(){

		}

	}//end Diagram

}//end namespace DiagramLayout