///////////////////////////////////////////////////////////
//  Command.cs
//  Implementation of the Class Command
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:43 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Meas;
namespace TC57CIM.IEC61970.Base.Meas {
	/// <summary>
	/// A Command is a discrete control used for supervisory control.
	/// </summary>
	public class Command : Control {

		/// <summary>
		/// Normal value for Control.value e.g. used for percentage scaling.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer normalValue;
		/// <summary>
		/// The value representing the actuator output.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer value;
		/// <summary>
		/// The ValueAliasSet used for translation of a Control value to a name.
		/// </summary>
		public TC57CIM.IEC61970.Base.Meas.ValueAliasSet ValueAliasSet;

		public Command(){

		}

		~Command(){

		}

		public override void Dispose(){

		}

	}//end Command

}//end namespace Meas