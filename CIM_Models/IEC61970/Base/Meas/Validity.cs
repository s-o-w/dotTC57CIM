///////////////////////////////////////////////////////////
//  Validity.cs
//  Implementation of the Class Validity
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:28 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



namespace TC57CIM.IEC61970.Base.Meas {
	/// <summary>
	/// Validity for MeasurementValue.
	/// </summary>
	public enum Validity : int {

		/// <summary>
		/// The value is marked good if no abnormal condition of the acquisition function
		/// or the information source is detected.
		/// </summary>
		GOOD,
		/// <summary>
		/// The value is marked questionable if a supervision function detects an abnormal
		/// behaviour, however the value could still be valid. The client is responsible
		/// for determining whether or not values marked "questionable" should be used.
		/// </summary>
		QUESTIONABLE,
		/// <summary>
		/// The value is marked invalid when a supervision function recognises abnormal
		/// conditions of the acquisition function or the information source (missing or
		/// non-operating updating devices). The value is not defined under this condition.
		/// The mark invalid is used to indicate to the client that the value may be
		/// incorrect and shall not be used.
		/// </summary>
		INVALID

	}//end Validity

}//end namespace Meas