///////////////////////////////////////////////////////////
//  IdentifiedObject.cs
//  Implementation of the Class IdentifiedObject
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:04 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.DiagramLayout;
using TC57CIM.IEC61970.InfIEC61970.Part303.GenericDataSet;
namespace TC57CIM.IEC61970.Base.Core {
	/// <summary>
	/// This is a root class to provide common identification for all classes needing
	/// identification and naming attributes.
	/// </summary>
	public class IdentifiedObject {

		/// <summary>
		/// The aliasName is free text human readable name of the object alternative to
		/// IdentifiedObject.name. It may be non unique and may not correlate to a naming
		/// hierarchy.
		/// The attribute aliasName is retained because of backwards compatibility between
		/// CIM relases. It is however recommended to replace aliasName with the Name class
		/// as aliasName is planned for retirement at a future time.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String aliasName;
		/// <summary>
		/// The description is a free human readable text describing or naming the object.
		/// It may be non unique and may not correlate to a naming hierarchy.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String description;
		/// <summary>
		/// Master resource identifier issued by a model authority. The mRID is unique
		/// within an exchange context. Global uniqueness is easily achieved by using a
		/// UUID, as specified in RFC 4122, for the mRID. The use of UUID is strongly
		/// recommended.
		/// For CIMXML data files in RDF syntax conforming to IEC 61970-552, the mRID is
		/// mapped to rdf:ID or rdf:about attributes that identify CIM object elements.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String mRID;
		/// <summary>
		/// The name is any free human readable and possibly non unique text naming the
		/// object.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String name;
		/// <summary>
		/// The diagram objects that are associated with the domain object.
		/// </summary>
		public TC57CIM.IEC61970.Base.DiagramLayout.DiagramObject DiagramObjects;
		/// <summary>
		/// Dataset containing the data objects.
		/// </summary>
		public TC57CIM.IEC61970.InfIEC61970.Part303.GenericDataSet.InstanceSet InstanceSet;

		public IdentifiedObject(){

		}

		~IdentifiedObject(){

		}

		public virtual void Dispose(){

		}

	}//end IdentifiedObject

}//end namespace Core