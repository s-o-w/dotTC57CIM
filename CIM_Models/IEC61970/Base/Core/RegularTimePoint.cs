///////////////////////////////////////////////////////////
//  RegularTimePoint.cs
//  Implementation of the Class RegularTimePoint
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:19 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61970.Base.Core {
	/// <summary>
	/// Time point for a schedule where the time between the consecutive points is
	/// constant.
	/// </summary>
	public class RegularTimePoint {

		/// <summary>
		/// The position of the regular time point in the sequence. Note that time points
		/// don't have to be sequential, i.e. time points may be omitted. The actual time
		/// for a RegularTimePoint is computed by multiplying the associated regular
		/// interval schedule's time step with the regular time point sequence number and
		/// adding the associated schedules start time. To specify values for the start
		/// time, use sequence number 0.  The sequence number cannot be negative.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer sequenceNumber;
		/// <summary>
		/// The first value at the time. The meaning of the value is defined by the derived
		/// type of the associated schedule.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float value1;
		/// <summary>
		/// The second value at the time. The meaning of the value is defined by the
		/// derived type of the associated schedule.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float value2;

		public RegularTimePoint(){

		}

		~RegularTimePoint(){

		}

		public virtual void Dispose(){

		}

	}//end RegularTimePoint

}//end namespace Core