///////////////////////////////////////////////////////////
//  NameType.cs
//  Implementation of the Class NameType
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:09 AM
//  Original author: T. Kostic
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.Base.Core {
	/// <summary>
	/// Type of name. Possible values for attribute 'name' are implementation dependent
	/// but standard profiles may specify types. An enterprise may have multiple IT
	/// systems each having its own local name for the same object, e.g. a planning
	/// system may have different names from an EMS. An object may also have different
	/// names within the same IT system, e.g. localName as defined in CIM version 14.
	/// The definition from CIM14 is:
	/// The localName is a human readable name of the object. It is a free text name
	/// local to a node in a naming hierarchy similar to a file directory structure. A
	/// power system related naming hierarchy may be: Substation, VoltageLevel,
	/// Equipment etc. Children of the same parent in such a hierarchy have names that
	/// typically are unique among them.
	/// </summary>
	public class NameType {

		/// <summary>
		/// Description of the name type.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String description;
		/// <summary>
		/// Name of the name type.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String name;
		/// <summary>
		/// Authority responsible for managing names of this type.
		/// </summary>
		public TC57CIM.IEC61970.Base.Core.NameTypeAuthority NameTypeAuthority;

		public NameType(){

		}

		~NameType(){

		}

		public virtual void Dispose(){

		}

	}//end NameType

}//end namespace Core