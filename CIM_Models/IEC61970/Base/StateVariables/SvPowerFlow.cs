///////////////////////////////////////////////////////////
//  SvPowerFlow.cs
//  Implementation of the Class SvPowerFlow
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:23 AM
//  Original author: kdd
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Wires;
using TC57CIM.IEC61970.Base.StateVariables;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61970.InfIEC61970.EnergyArea;
namespace TC57CIM.IEC61970.Base.StateVariables {
	/// <summary>
	/// State variable for power flow. Load convention is used for flow direction. This
	/// means flow out from the TopologicalNode into the equipment is positive.
	/// </summary>
	public class SvPowerFlow : StateVariable {

		/// <summary>
		/// The active power flow. Load sign convention is used, i.e. positive sign means
		/// flow out from a TopologicalNode (bus) into the conducting equipment.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower p;
		/// <summary>
		/// The individual phase of the flow.   If unspecified, then assumed to be balanced
		/// among phases.
		/// </summary>
		public TC57CIM.IEC61970.Base.Wires.SinglePhaseKind phase;
		/// <summary>
		/// The reactive power flow. Load sign convention is used, i.e. positive sign means
		/// flow out from a TopologicalNode (bus) into the conducting equipment.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ReactivePower q;
		/// <summary>
		/// The terminal associated with the power flow state variable.
		/// </summary>
		public TC57CIM.IEC61970.Base.Core.Terminal Terminal;
		public TC57CIM.IEC61970.InfIEC61970.EnergyArea.EnergyGroup m_EnergyGroup;

		public SvPowerFlow(){

		}

		~SvPowerFlow(){

		}

		public override void Dispose(){

		}

	}//end SvPowerFlow

}//end namespace StateVariables