///////////////////////////////////////////////////////////
//  TCPAccessPoint.cs
//  Implementation of the Class TCPAccessPoint
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:25 AM
//  Original author: selaost1
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.ICCPConfiguration;
namespace TC57CIM.IEC61970.Base.ICCPConfiguration {
	/// <summary>
	/// Allows addressing and behavioural information regarding the use of TCP by ICCP
	/// links.
	/// </summary>
	public class TCPAccessPoint : IPAccessPoint {

		/// <summary>
		/// Indicates the default interval at which TCP will check if the TCP connection is
		/// still valid.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer keepAliveTime;
		/// <summary>
		/// This value is only needed to be specified for called nodes (e.g. those that
		/// respond to a TCP.Open request).
		/// 
		/// This value specifies the TCP port to be used. Well known and "registered" ports
		/// are preferred and can be found at:
		/// http://www.iana.org/assignments/service-names-port-numbers/service-names-port-
		/// numbers.xhtml
		/// 
		/// For IEC 60870-6 TASE.2 (e.g. ICCP) and IEC 61850, the value used shall be 102
		/// for non-TLS protected exchanges. The value shall be 3782 for TLS transported
		/// ICCP and 61850 exchanges.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer port;

		public TCPAccessPoint(){

		}

		~TCPAccessPoint(){

		}

		public override void Dispose(){

		}

	}//end TCPAccessPoint

}//end namespace ICCPConfiguration