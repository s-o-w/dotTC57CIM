///////////////////////////////////////////////////////////
//  ICCPVirtualControlCentre.cs
//  Implementation of the Class ICCPVirtualControlCentre
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:02 AM
//  Original author: herb
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.ICCPConfiguration;
using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61970.Base.ICCPConfiguration {
	/// <summary>
	/// This contains the information that a particular actor exposes for a particular
	/// agreed upon ICCP Bilateral Table.
	/// </summary>
	public class ICCPVirtualControlCentre : BilateralExchangeActor {

		/// <summary>
		/// Specifies the expected security mechanism, per IEC 62351-4, to be utilized.
		/// </summary>
		public ApplicationSecurityKind applicationSecurityRequirement;
		/// <summary>
		/// Used to indicate if the Provider is responsible for initiating the TASE.2
		/// connection.  If the value is TRUE, the provider is responsible for establishing
		/// the association.  If the value is FALSE, the peer provider of the Bilateral
		/// Table will need to establish the association.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean calling;
		/// <summary>
		/// If True the value indicates that the entity represented by the bilateral table
		/// is capable of issuing requests and responding to request (e.g. bidirectional
		/// support of ICCP requests).
		/// 
		/// If False, this indicates that a calling entity (e.g. calling = True) will not
		/// be able to respond to ICCP requests.  If False, and calling=False, this
		/// indicates that the entity will only respond to ICCP requests and not issue ICCP
		/// requests.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean clientAndServer;
		/// <summary>
		/// Specifies the fastest update interval that can be provided for integrity
		/// information and Transfer Set creation. The value is in seconds.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer minimumUpdateInterval;
		/// <summary>
		/// Specifies the ICC scope name that the remote can use to access the information
		/// in the Bilateral Table if the information is not VCC scoped.  This value may
		/// not be null.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String nameOfLocalICC;
		/// <summary>
		/// Per IEC 60870-6-702:  If true indicates support for basic services.  Must
		/// always be true.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean supportForBlock1;
		/// <summary>
		/// Per IEC 60870-6-702:  If true indicates support for extended conditions.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean supportForBlock2;
		/// <summary>
		/// Per IEC 60870-6-702:  If true indicates support for blocked transfers.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean supportForBlock3;
		/// <summary>
		/// Per IEC 60870-6-702:  If true indicates support for information messages.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean supportForBlock4;
		/// <summary>
		/// Per IEC 60870-6-702:  If true indicates support for device control.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean supportForBlock5;
		/// <summary>
		/// Per IEC 60870-6-702:  If true indicates support for accounts.  The use of this
		/// block was deprecated in Edition 3.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean supportForDepriciatedBlock8;
		/// <summary>
		/// If true, then transport level security as specified by IEC 62351-6 is required.
		/// 
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean transportSecurityRequirement;

		public ICCPVirtualControlCentre(){

		}

		~ICCPVirtualControlCentre(){

		}

		public override void Dispose(){

		}

	}//end ICCPVirtualControlCentre

}//end namespace ICCPConfiguration