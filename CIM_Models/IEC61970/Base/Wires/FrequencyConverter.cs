///////////////////////////////////////////////////////////
//  FrequencyConverter.cs
//  Implementation of the Class FrequencyConverter
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:56 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Wires;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A device to convert from one frequency to another (e.g., frequency F1 to F2)
	/// comprises a pair of FrequencyConverter instances. One converts from F1 to DC,
	/// the other converts the DC to F2.
	/// </summary>
	public class FrequencyConverter : RegulatingCondEq {

		/// <summary>
		/// Frequency on the AC side.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Frequency frequency;
		/// <summary>
		/// The maximum active power on the DC side at which the frequency converter should
		/// operate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower maxP;
		/// <summary>
		/// The maximum voltage on the DC side at which the frequency converter should
		/// operate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage maxU;
		/// <summary>
		/// The minimum active power on the DC side at which the frequency converter should
		/// operate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower minP;
		/// <summary>
		/// The minimum voltage on the DC side at which the frequency converter should
		/// operate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage minU;

		public FrequencyConverter(){

		}

		~FrequencyConverter(){

		}

		public override void Dispose(){

		}

	}//end FrequencyConverter

}//end namespace Wires