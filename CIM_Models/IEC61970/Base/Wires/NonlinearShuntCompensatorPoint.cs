///////////////////////////////////////////////////////////
//  NonlinearShuntCompensatorPoint.cs
//  Implementation of the Class NonlinearShuntCompensatorPoint
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:10 AM
//  Original author: selaost1
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A non linear shunt compensator bank or section admittance value. The number of
	/// NonlinearShuntCompenstorPoint instances associated with a
	/// NonlinearShuntCompensator shall be equal to ShuntCompensator.maximumSections.
	/// ShuntCompensator.sections shall only be set to one of the
	/// NonlinearShuntCompenstorPoint.sectionNumber. There is no interpolation between
	/// NonlinearShuntCompenstorPoint-s.
	/// </summary>
	public class NonlinearShuntCompensatorPoint {

		/// <summary>
		/// Positive sequence shunt (charging) susceptance per section.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Susceptance b;
		/// <summary>
		/// Zero sequence shunt (charging) susceptance per section.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Susceptance b0;
		/// <summary>
		/// Positive sequence shunt (charging) conductance per section.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Conductance g;
		/// <summary>
		/// Zero sequence shunt (charging) conductance per section.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Conductance g0;
		/// <summary>
		/// The number of the section.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer sectionNumber;

		public NonlinearShuntCompensatorPoint(){

		}

		~NonlinearShuntCompensatorPoint(){

		}

		public virtual void Dispose(){

		}

	}//end NonlinearShuntCompensatorPoint

}//end namespace Wires