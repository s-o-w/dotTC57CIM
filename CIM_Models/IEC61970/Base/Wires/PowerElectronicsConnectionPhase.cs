///////////////////////////////////////////////////////////
//  PowerElectronicsConnectionPhase.cs
//  Implementation of the Class PowerElectronicsConnectionPhase
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:14 AM
//  Original author: selaost1
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Wires;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A single phase of a power electronics connection.
	/// </summary>
	public class PowerElectronicsConnectionPhase : PowerSystemResource {

		/// <summary>
		/// Active power injection. Load sign convention is used, i.e. positive sign means
		/// flow into the equipment from the network.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower p;
		/// <summary>
		/// Phase of this energy producer component.   If the energy producer is wye
		/// connected, the connection is from the indicated phase to the central ground or
		/// neutral point.  If the energy producer is delta connected, the phase indicates
		/// an energy producer connected from the indicated phase to the next logical non-
		/// neutral phase.
		/// </summary>
		public SinglePhaseKind phase;
		/// <summary>
		/// Reactive power injection. Load sign convention is used, i.e. positive sign
		/// means flow into the equipment from the network.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ReactivePower q;

		public PowerElectronicsConnectionPhase(){

		}

		~PowerElectronicsConnectionPhase(){

		}

		public override void Dispose(){

		}

	}//end PowerElectronicsConnectionPhase

}//end namespace Wires