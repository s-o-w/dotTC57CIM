///////////////////////////////////////////////////////////
//  EnergySource.cs
//  Implementation of the Class EnergySource
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:04:50 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Wires;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// A generic equivalent for an energy supplier on a transmission or distribution
	/// voltage level.
	/// </summary>
	public class EnergySource : EnergyConnection {

		/// <summary>
		/// High voltage source active injection. Load sign convention is used, i.e.
		/// positive sign means flow out from a node.
		/// Starting value for steady state solutions.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower activePower;
		/// <summary>
		/// Phase-to-phase nominal voltage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage nominalVoltage;
		/// <summary>
		/// This is the maximum active power that can be produced by the source. Load sign
		/// convention is used, i.e. positive sign means flow out from a TopologicalNode
		/// (bus) into the conducting equipment.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower pMax;
		/// <summary>
		/// This is the minimum active power that can be produced by the source. Load sign
		/// convention is used, i.e. positive sign means flow out from a TopologicalNode
		/// (bus) into the conducting equipment.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower pMin;
		/// <summary>
		/// Positive sequence Thevenin resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Resistance r;
		/// <summary>
		/// Zero sequence Thevenin resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Resistance r0;
		/// <summary>
		/// High voltage source reactive injection. Load sign convention is used, i.e.
		/// positive sign means flow out from a node.
		/// Starting value for steady state solutions.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ReactivePower reactivePower;
		/// <summary>
		/// Negative sequence Thevenin resistance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Resistance rn;
		/// <summary>
		/// Phase angle of a-phase open circuit used when voltage characteristics need to
		/// be imposed at the node associated with the terminal of the energy source, such
		/// as when voltages and angles from the transmission level are used as input to
		/// the distribution network. The attribute shall be a positive value or zero.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.AngleRadians voltageAngle;
		/// <summary>
		/// Phase-to-phase open circuit voltage magnitude used when voltage characteristics
		/// need to be imposed at the node associated with the terminal of the energy
		/// source, such as when voltages and angles from the transmission level are used
		/// as input to the distribution network. The attribute shall be a positive value
		/// or zero.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage voltageMagnitude;
		/// <summary>
		/// Positive sequence Thevenin reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Reactance x;
		/// <summary>
		/// Zero sequence Thevenin reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Reactance x0;
		/// <summary>
		/// Negative sequence Thevenin reactance.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Reactance xn;
		/// <summary>
		/// Energy Scheduling Type of an Energy Source.
		/// </summary>
		private TC57CIM.IEC61970.Base.Wires.EnergySchedulingType EnergySchedulingType;

		public EnergySource(){

		}

		~EnergySource(){

		}

		public override void Dispose(){

		}

	}//end EnergySource

}//end namespace Wires