///////////////////////////////////////////////////////////
//  TapChangerControl.cs
//  Implementation of the Class TapChangerControl
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:25 AM
//  Original author: Tom
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Wires;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// Describes behaviour specific to tap changers, e.g. how the voltage at the end
	/// of a line varies with the load level and compensation of the voltage drop by
	/// tap adjustment.
	/// </summary>
	public class TapChangerControl : RegulatingControl {

		/// <summary>
		/// Maximum allowed regulated voltage on the PT secondary, regardless of line drop
		/// compensation. Sometimes referred to as first-house protection.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage limitVoltage;
		/// <summary>
		/// If true, the line drop compensation is to be applied.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean lineDropCompensation;
		/// <summary>
		/// Line drop compensator resistance setting for normal (forward) power flow.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Resistance lineDropR;
		/// <summary>
		/// Line drop compensator reactance setting for normal (forward) power flow.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Reactance lineDropX;
		/// <summary>
		/// Line drop compensator resistance setting for reverse power flow.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Resistance reverseLineDropR;
		/// <summary>
		/// Line drop compensator reactance setting for reverse power flow.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Reactance reverseLineDropX;

		public TapChangerControl(){

		}

		~TapChangerControl(){

		}

		public override void Dispose(){

		}

	}//end TapChangerControl

}//end namespace Wires