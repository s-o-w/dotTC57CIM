///////////////////////////////////////////////////////////
//  ReactiveCapabilityCurve.cs
//  Implementation of the Class ReactiveCapabilityCurve
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:18 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Equivalents;
using TC57CIM.IEC61970.Base.Wires;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// Reactive power rating envelope versus the synchronous machine's active power,
	/// in both the generating and motoring modes. For each active power value there is
	/// a corresponding high and low reactive power limit  value. Typically there will
	/// be a separate curve for each coolant condition, such as hydrogen pressure.  The
	/// Y1 axis values represent reactive minimum and the Y2 axis values represent
	/// reactive maximum.
	/// </summary>
	public class ReactiveCapabilityCurve : Curve {

		/// <summary>
		/// The machine's coolant temperature (e.g., ambient air or stator circulating
		/// water).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Temperature coolantTemperature;
		/// <summary>
		/// The hydrogen coolant pressure.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Pressure hydrogenPressure;
		/// <summary>
		/// The equivalent injection using this reactive capability curve.
		/// </summary>
		public TC57CIM.IEC61970.Base.Equivalents.EquivalentInjection EquivalentInjection;
		/// <summary>
		/// Synchronous machines using this curve as default.
		/// </summary>
		public TC57CIM.IEC61970.Base.Wires.SynchronousMachine InitiallyUsedBySynchronousMachines;
		/// <summary>
		/// Synchronous machines using this curve.
		/// </summary>
		public TC57CIM.IEC61970.Base.Wires.SynchronousMachine SynchronousMachines;

		public ReactiveCapabilityCurve(){

		}

		~ReactiveCapabilityCurve(){

		}

		public override void Dispose(){

		}

	}//end ReactiveCapabilityCurve

}//end namespace Wires