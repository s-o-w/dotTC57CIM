///////////////////////////////////////////////////////////
//  TapChangerTablePoint.cs
//  Implementation of the Class TapChangerTablePoint
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:25 AM
//  Original author: selaost1
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61970.Base.Wires {
	/// <summary>
	/// Describes each tap step in the tabular curve.
	/// </summary>
	public class TapChangerTablePoint {

		/// <summary>
		/// The magnetizing branch susceptance deviation as a percentage of nominal value.
		/// The actual susceptance is calculated as follows:
		/// calculated magnetizing susceptance = b(nominal) * (1 + b(from this class)/100).
		///  The b(nominal) is defined as the static magnetizing susceptance on the
		/// associated power transformer end or ends.  This model assumes the star
		/// impedance (pi model) form.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent b;
		/// <summary>
		/// The magnetizing branch conductance deviation as a percentage of nominal value.
		/// The actual conductance is calculated as follows:
		/// calculated magnetizing conductance = g(nominal) * (1 + g(from this class)/100).
		///  The g(nominal) is defined as the static magnetizing conductance on the
		/// associated power transformer end or ends.  This model assumes the star
		/// impedance (pi model) form.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent g;
		/// <summary>
		/// The resistance deviation as a percentage of nominal value. The actual reactance
		/// is calculated as follows:
		/// calculated resistance = r(nominal) * (1 + r(from this class)/100).   The
		/// r(nominal) is defined as the static resistance on the associated power
		/// transformer end or ends.  This model assumes the star impedance (pi model) form.
		/// 
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent r;
		/// <summary>
		/// The voltage at the tap step divided by rated voltage of the transformer end
		/// having the tap changer. Hence this is a value close to one.
		/// For example, if the ratio at step 1 is 1.01, and the rated voltage of the
		/// transformer end is 110kV, then the voltage obtained by setting the tap changer
		/// to step 1 to is 111.1kV.
		/// </summary>
		public float ratio;
		/// <summary>
		/// The tap step.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer step;
		/// <summary>
		/// The series reactance deviation as a percentage of nominal value. The actual
		/// reactance is calculated as follows:
		/// calculated reactance = x(nominal) * (1 + x(from this class)/100).   The
		/// x(nominal) is defined as the static series reactance on the associated power
		/// transformer end or ends.  This model assumes the star impedance (pi model) form.
		/// 
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent x;

		public TapChangerTablePoint(){

		}

		~TapChangerTablePoint(){

		}

		public virtual void Dispose(){

		}

	}//end TapChangerTablePoint

}//end namespace Wires