///////////////////////////////////////////////////////////
//  HydroPump.cs
//  Implementation of the Class HydroPump
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:01 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Generation.Production;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.Base.Generation.Production {
	/// <summary>
	/// A synchronous motor-driven pump, typically associated with a pumped storage
	/// plant.
	/// </summary>
	public class HydroPump : Equipment {

		/// <summary>
		/// The pumping discharge under maximum head conditions, usually at full gate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.VolumeFlowRate pumpDischAtMaxHead;
		/// <summary>
		/// The pumping discharge under minimum head conditions, usually at full gate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.VolumeFlowRate pumpDischAtMinHead;
		/// <summary>
		/// The pumping power under maximum head conditions, usually at full gate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower pumpPowerAtMaxHead;
		/// <summary>
		/// The pumping power under minimum head conditions, usually at full gate.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower pumpPowerAtMinHead;
		/// <summary>
		/// The hydro pump has a pumping schedule over time, indicating when pumping is to
		/// occur.
		/// </summary>
		public TC57CIM.IEC61970.Base.Generation.Production.HydroPumpOpSchedule HydroPumpOpSchedule;

		public HydroPump(){

		}

		~HydroPump(){

		}

		public override void Dispose(){

		}

	}//end HydroPump

}//end namespace Production