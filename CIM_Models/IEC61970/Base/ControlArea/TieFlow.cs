///////////////////////////////////////////////////////////
//  TieFlow.cs
//  Implementation of the Class TieFlow
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:05:26 AM
//  Original author: kdd
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.ControlArea;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61970.Base.ControlArea {
	/// <summary>
	/// Defines the structure (in terms of location and direction) of the net
	/// interchange constraint for a control area. This constraint may be used by
	/// either AGC or power flow.
	/// </summary>
	public class TieFlow : IdentifiedObject {

		/// <summary>
		/// Specifies the sign of the tie flow associated with a control area. True if
		/// positive flow into the terminal (load convention) is also positive flow into
		/// the control area.  See the description of ControlArea for further explanation
		/// of how TieFlow.positiveFlowIn is used.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean positiveFlowIn;
		/// <summary>
		/// The primary and alternate tie flow measurements associated with the tie flow.
		/// </summary>
		public TC57CIM.IEC61970.Base.ControlArea.AltTieMeas AltTieMeas;
		/// <summary>
		/// The terminal to which this tie flow belongs.
		/// </summary>
		public TC57CIM.IEC61970.Base.Core.Terminal Terminal;

		public TieFlow(){

		}

		~TieFlow(){

		}

		public override void Dispose(){

		}

	}//end TieFlow

}//end namespace ControlArea