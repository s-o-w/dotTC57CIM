///////////////////////////////////////////////////////////
//  Customer.cs
//  Implementation of the Class Customer
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:03 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61968.Customers;
using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Common;
using TC57CIM.IEC61968.Work;
using TC57CIM.IEC61968.InfIEC61968.InfCommon;
using TC57CIM.IEC61968.Operations;
using TC57CIM.IEC61968.Metering;
namespace TC57CIM.IEC61968.Customers {
	/// <summary>
	/// Organisation receiving services from service supplier.
	/// </summary>
	public class Customer : OrganisationRole {

		/// <summary>
		/// Kind of customer.
		/// </summary>
		public CustomerKind kind;
		/// <summary>
		/// Locale designating language to use in communications with this customer.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String locale;
		/// <summary>
		/// Priority of the customer.
		/// </summary>
		public TC57CIM.IEC61968.Common.Priority priority;
		/// <summary>
		/// (if applicable) Public utilities commission (PUC) identification number.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String pucNumber;
		/// <summary>
		/// True if customer organisation has special service needs such as life support,
		/// hospitals, etc.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String specialNeed;
		/// <summary>
		/// Status of this customer.
		/// </summary>
		public TC57CIM.IEC61968.Common.Status status;
		/// <summary>
		/// (deprecated) (use 'priority' instead) True if this is an important customer.
		/// Importance is for matters different than those in 'specialNeed' attribute.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean vip;
		/// <summary>
		/// All the works performed for this customer.
		/// </summary>
		public TC57CIM.IEC61968.Work.Work Works;
		public TC57CIM.IEC61968.InfIEC61968.InfCommon.OldPerson ErpPersons;
		/// <summary>
		/// All agreements of this customer.
		/// </summary>
		public TC57CIM.IEC61968.Customers.CustomerAgreement CustomerAgreements;
		/// <summary>
		/// All accounts of this customer.
		/// </summary>
		public TC57CIM.IEC61968.Customers.CustomerAccount CustomerAccounts;
		/// <summary>
		/// The outage plan that identifies the customers that are affected.
		/// </summary>
		public TC57CIM.IEC61968.Operations.OutagePlan OutagePlan;
		/// <summary>
		/// The person representing the customer
		/// </summary>
		public TC57CIM.IEC61968.Common.Person Person;
		/// <summary>
		/// All customers related to the primary customer.  This may support customer
		/// hierarchies. (this can be used to support some form of customer containment)
		/// </summary>
		public TC57CIM.IEC61968.Customers.Customer Customers;
		/// <summary>
		/// All end devices of this customer.
		/// </summary>
		public TC57CIM.IEC61968.Metering.EndDevice EndDevices;

		public Customer(){

		}

		~Customer(){

		}

		public override void Dispose(){

		}

	}//end Customer

}//end namespace Customers