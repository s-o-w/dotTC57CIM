///////////////////////////////////////////////////////////
//  PricingStructure.cs
//  Implementation of the Class PricingStructure
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:21 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Customers;
using TC57CIM.IEC61968.PaymentMetering;
using TC57CIM.IEC61968.Common;
using TC57CIM.IEC61968.Metering;
namespace TC57CIM.IEC61968.Customers {
	/// <summary>
	/// Grouping of pricing components and prices used in the creation of customer
	/// charges and the eligibility criteria under which these terms may be offered to
	/// a customer. The reasons for grouping include state, customer classification,
	/// site characteristics, classification (i.e. fee price structure, deposit price
	/// structure, electric service price structure, etc.) and accounting requirements.
	/// 
	/// </summary>
	public class PricingStructure : Document {

		/// <summary>
		/// Unique user-allocated key for this pricing structure, used by company
		/// representatives to identify the correct price structure for allocating to a
		/// customer. For rate schedules it is often prefixed by a state code.
		/// </summary>
		public string code;
		/// <summary>
		/// Absolute maximum valid non-demand usage quantity used in validating a
		/// customer's billed non-demand usage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer dailyCeilingUsage;
		/// <summary>
		/// Used in place of actual computed estimated average when history of usage is not
		/// available, and typically manually entered by customer accounting.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer dailyEstimatedUsage;
		/// <summary>
		/// Absolute minimum valid non-demand usage quantity used in validating a
		/// customer's billed non-demand usage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer dailyFloorUsage;
		/// <summary>
		/// (accounting) Kind of revenue, often used to determine the grace period allowed,
		/// before collection actions are taken on a customer (grace periods vary between
		/// revenue classes).
		/// </summary>
		public RevenueKind revenueKind;
		/// <summary>
		/// True if this pricing structure is not taxable.
		/// </summary>
		public bool taxExemption;
		/// <summary>
		/// All transactions applying this pricing structure.
		/// </summary>
		public TC57CIM.IEC61968.PaymentMetering.Transaction Transactions;
		/// <summary>
		/// All tariffs used by this pricing structure.
		/// </summary>
		public TC57CIM.IEC61968.Customers.Tariff Tariffs;
		/// <summary>
		/// All service delivery points (with prepayment meter running as a stand-alone
		/// device, with no CustomerAgreement or Customer) to which this pricing structure
		/// applies.
		/// </summary>
		public TC57CIM.IEC61968.Metering.UsagePoint UsagePoints;

		public PricingStructure(){

		}

		~PricingStructure(){

		}

		public override void Dispose(){

		}

	}//end PricingStructure

}//end namespace Customers