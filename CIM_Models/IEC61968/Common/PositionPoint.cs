///////////////////////////////////////////////////////////
//  PositionPoint.cs
//  Implementation of the Class PositionPoint
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:20 AM
//  Original author: T. Kostic
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61968.Common {
	/// <summary>
	/// Set of spatial coordinates that determine a point, defined in the coordinate
	/// system specified in 'Location.CoordinateSystem'. Use a single position point
	/// instance to describe a point-oriented location. Use a sequence of position
	/// points to describe a line-oriented object (physical location of non-point
	/// oriented objects like cables or lines), or area of an object (like a substation
	/// or a geographical zone - in this case, have first and last position point with
	/// the same values).
	/// </summary>
	public class PositionPoint {

		/// <summary>
		/// Zero-relative sequence number of this group within a series of points; used
		/// when there is a need to express disjoint groups of points that are considered
		/// to be part of a single location.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer groupNumber;
		/// <summary>
		/// Zero-relative sequence number of this point within a series of points.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer sequenceNumber;
		/// <summary>
		/// X axis position.
		/// </summary>
		public string xPosition;
		/// <summary>
		/// Y axis position.
		/// </summary>
		public string yPosition;
		/// <summary>
		/// (if applicable) Z axis position.
		/// </summary>
		public string zPosition;

		public PositionPoint(){

		}

		~PositionPoint(){

		}

		public virtual void Dispose(){

		}

	}//end PositionPoint

}//end namespace Common