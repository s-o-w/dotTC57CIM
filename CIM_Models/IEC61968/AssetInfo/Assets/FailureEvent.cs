///////////////////////////////////////////////////////////
//  FailureEvent.cs
//  Implementation of the Class FailureEvent
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:11 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61968.AssetInfo.Assets;
using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Common;
namespace TC57CIM.IEC61968.AssetInfo.Assets {
	/// <summary>
	/// An event where an asset has failed to perform its functions within specified
	/// parameters. This class is intended to reflect the failure itself. Additional
	/// information resulting from forensic analysis could be captured by a diagnosis
	/// data set.
	/// </summary>
	public class FailureEvent : ActivityRecord {

		/// <summary>
		/// Reason for breaker failure.
		/// </summary>
		public BreakerFailureReasonKind breakerFailureReason;
		/// <summary>
		/// Code for asset failure.
		/// </summary>
		public string corporateCode;
		/// <summary>
		/// Classification of failure.
		/// </summary>
		public AssetFailureClassification failureClassification;
		/// <summary>
		/// Time and date of asset failure.
		/// </summary>
		public System.DateTime failureDateTime;
		/// <summary>
		/// How the asset failure was isolated from the system.
		/// </summary>
		public FailureIsolationMethodKind failureIsolationMethod;
		/// <summary>
		/// What asset failed to be able to do.
		/// </summary>
		public AssetFailureMode failureMode;
		/// <summary>
		/// The method used for locating the faulted part of the asset. For example, cable
		/// options include: Cap Discharge-Thumping, Bridge Method, Visual Inspection,
		/// Other.
		/// </summary>
		public string faultLocatingMethod;
		/// <summary>
		/// Failure location on an object.
		/// </summary>
		public string location;
		/// <summary>
		/// Root cause of asset failure.
		/// </summary>
		public string rootCause;
		/// <summary>
		/// Reason for transformer failure.
		/// </summary>
		public TransformerFailureReasonKind transformerFailureReason;

		public FailureEvent(){

		}

		~FailureEvent(){

		}

		public override void Dispose(){

		}

	}//end FailureEvent

}//end namespace Assets