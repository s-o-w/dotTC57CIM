///////////////////////////////////////////////////////////
//  Analytic.cs
//  Implementation of the Class Analytic
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:32:55 AM
//  Original author: Gowri
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.AssetInfo.Assets;
using TC57CIM.IEC61968.Common;
namespace TC57CIM.IEC61968.AssetInfo.Assets {
	/// <summary>
	/// An algorithm or calculation for making an assessment about an asset or asset
	/// grouping for lifecycle decision making.
	/// </summary>
	public class Analytic : Document {

		/// <summary>
		/// Value that indicates best possible numeric value.
		/// </summary>
		public float bestValue;
		/// <summary>
		/// Kind of analytic this analytic is.
		/// </summary>
		public AnalyticKind kind;
		/// <summary>
		/// The scoring scale kind.
		/// </summary>
		public ScaleKind scaleKind;
		/// <summary>
		/// Value that indicates worst possible numeric value.
		/// </summary>
		public float worstValue;
		/// <summary>
		/// Asset on which this analytic can be performed.
		/// </summary>
		public TC57CIM.IEC61968.AssetInfo.Assets.Asset Asset;
		/// <summary>
		/// Analytic score produced by this analytic.
		/// </summary>
		public TC57CIM.IEC61968.AssetInfo.Assets.AnalyticScore AnalyticScore;
		/// <summary>
		/// Asset health event which can be generated by this analytic.
		/// </summary>
		public TC57CIM.IEC61968.AssetInfo.Assets.AssetHealthEvent AssetHealthEvent;
		/// <summary>
		/// Asset group on which this analytic can be performed.
		/// </summary>
		public TC57CIM.IEC61968.AssetInfo.Assets.AssetGroup AssetGroup;

		public Analytic(){

		}

		~Analytic(){

		}

		public override void Dispose(){

		}

	}//end Analytic

}//end namespace Assets