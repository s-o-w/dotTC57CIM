///////////////////////////////////////////////////////////
//  TapChangerInfo.cs
//  Implementation of the Class TapChangerInfo
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:27 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.AssetInfo.Assets;
namespace TC57CIM.IEC61968.AssetInfo {
	/// <summary>
	/// Tap changer data.
	/// </summary>
	public class TapChangerInfo : Assets.AssetInfo {

		/// <summary>
		/// Basic Insulation Level (BIL) expressed as the impulse crest voltage of a
		/// nominal wave, typically 1.2 X 50 microsecond. This is a measure of the ability
		/// of the insulation to withstand very high voltage surges.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage bil;
		/// <summary>
		/// Built-in current transformer primary rating.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.CurrentFlow ctRating;
		/// <summary>
		/// Built-in current transducer ratio.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float ctRatio;
		/// <summary>
		/// Frequency at which the ratings apply.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Frequency frequency;
		/// <summary>
		/// Highest possible tap step position, advance from neutral.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer highStep;
		/// <summary>
		/// Whether this tap changer has under load tap changing capabilities.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean isTcul;
		/// <summary>
		/// Lowest possible tap step position, retard from neutral.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer lowStep;
		/// <summary>
		/// The neutral tap step position for the winding.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer neutralStep;
		/// <summary>
		/// Voltage at which the winding operates at the neutral tap setting.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage neutralU;
		/// <summary>
		/// Built-in voltage transducer ratio.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float ptRatio;
		/// <summary>
		/// Rated apparent power.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ApparentPower ratedApparentPower;
		/// <summary>
		/// Rated current.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.CurrentFlow ratedCurrent;
		/// <summary>
		/// Rated voltage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage ratedVoltage;
		/// <summary>
		/// Phase shift per step position.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.AngleDegrees stepPhaseIncrement;
		/// <summary>
		/// Tap step increment, in per cent of rated voltage, per step position.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent stepVoltageIncrement;

		public TapChangerInfo(){

		}

		~TapChangerInfo(){

		}

		public override void Dispose(){

		}

	}//end TapChangerInfo

}//end namespace AssetInfo