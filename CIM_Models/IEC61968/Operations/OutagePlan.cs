///////////////////////////////////////////////////////////
//  OutagePlan.cs
//  Implementation of the Class OutagePlan
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:19 AM
//  Original author: T. Kostic
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Common;
using TC57CIM.IEC61968.Operations;
namespace TC57CIM.IEC61968.Operations {
	/// <summary>
	/// Document containing the definition of planned outages of equipment and/or usage
	/// points. It will reference switching plans that are used to execute the planned
	/// outage.
	/// </summary>
	public class OutagePlan : Document {

		/// <summary>
		/// The date and time the outage plan was approved
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DateTime approvedDateTime;
		/// <summary>
		/// Date and Time the planned outage was canceled.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DateTime cancelledDateTime;
		/// <summary>
		/// planned start and end time of the planned outage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DateTimeInterval plannedPeriod;
		/// <summary>
		/// Purpose of  this outage plan, such as whether it is to replace equipment or
		/// perform maintenance or repairs or to reconfigure network topology.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String purpose;
		/// <summary>
		/// The outage order that will address the outage plan.
		/// </summary>
		public TC57CIM.IEC61968.Operations.OutageOrder OutageOrder;
		/// <summary>
		/// The outage resulting from the execution of the outage plan.
		/// </summary>
		public TC57CIM.IEC61968.Operations.PlannedOutage PlannedOutage;

		public OutagePlan(){

		}

		~OutagePlan(){

		}

		public override void Dispose(){

		}

	}//end OutagePlan

}//end namespace Operations