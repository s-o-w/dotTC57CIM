///////////////////////////////////////////////////////////
//  PowerQualityPricing.cs
//  Implementation of the Class PowerQualityPricing
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:20 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Common;
namespace TC57CIM.IEC61968.InfIEC61968.InfCustomers {
	/// <summary>
	/// Pricing can be based on power quality.
	/// </summary>
	public class PowerQualityPricing : Document {

		/// <summary>
		/// Emergency high voltage limit.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage emergencyHighVoltLimit;
		/// <summary>
		/// Emergency low voltage limit.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage emergencyLowVoltLimit;
		/// <summary>
		/// Normal high voltage limit.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage normalHighVoltLimit;
		/// <summary>
		/// Normal low voltage limit.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage normalLowVoltLimit;
		/// <summary>
		/// Threshold minimum power factor for this PricingStructure, specified in
		/// instances where a special charge is levied if the actual power factor for a
		/// Service falls below the value specified here.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float powerFactorMin;
		/// <summary>
		/// Value of uninterrupted service (Cost per energy).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.CostPerEnergyUnit valueUninterruptedServiceEnergy;
		/// <summary>
		/// Value of uninterrupted service (Cost per active power).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float valueUninterruptedServiceP;
		/// <summary>
		/// Voltage imbalance violation cost (Cost per unit Voltage).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float voltImbalanceViolCost;
		/// <summary>
		/// Voltage limit violation cost (Cost per unit Voltage).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float voltLimitViolCost;

		public PowerQualityPricing(){

		}

		~PowerQualityPricing(){

		}

		public override void Dispose(){

		}

	}//end PowerQualityPricing

}//end namespace InfCustomers