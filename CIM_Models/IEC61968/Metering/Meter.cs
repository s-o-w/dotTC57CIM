///////////////////////////////////////////////////////////
//  Meter.cs
//  Implementation of the Class Meter
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:15 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Metering;
namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// Physical asset that performs the metering role of the usage point. Used for
	/// measuring consumption and detection of events.
	/// </summary>
	public class Meter : EndDevice {

		/// <summary>
		/// A code used to specify the connection category, e.g. low voltage, where the
		/// meter operates.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String connectionCategory;
		/// <summary>
		/// Meter form designation per ANSI C12.10 or other applicable standard. An
		/// alphanumeric designation denoting the circuit arrangement for which the meter
		/// is applicable and its specific terminal arrangement.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String formNumber;
		/// <summary>
		/// All multipliers applied at this meter.
		/// </summary>
		public TC57CIM.IEC61968.Metering.MeterMultiplier MeterMultipliers;
		/// <summary>
		/// All meter readings provided by this meter.
		/// </summary>
		public TC57CIM.IEC61968.Metering.MeterReading MeterReadings;

		public Meter(){

		}

		~Meter(){

		}

		public override void Dispose(){

		}

	}//end Meter

}//end namespace Metering