///////////////////////////////////////////////////////////
//  PanDemandResponse.cs
//  Implementation of the Class PanDemandResponse
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:19 AM
//  Original author: T. Kostic
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61968.Metering;
using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// PAN control used to issue action/command to PAN devices during a demand
	/// response/load control event.
	/// </summary>
	public class PanDemandResponse : EndDeviceAction {

		/// <summary>
		/// Appliance being controlled.
		/// </summary>
		public ControlledAppliance appliance;
		/// <summary>
		/// Used to define a maximum energy usage limit as a percentage of the client
		/// implementations specific average energy usage. The load adjustment percentage
		/// is added to 100% creating a percentage limit applied to the client
		/// implementations specific average energy usage. A -10% load adjustment
		/// percentage will establish an energy usage limit equal to 90% of the client
		/// implementations specific average energy usage. Each load adjustment percentage
		/// is referenced to the client implementations specific average energy usage.
		/// There are no cumulative effects.
		/// The range of this field is -100% to +100% with a resolution of 1. A -100% value
		/// equals a total load shed. A +100% value will limit the energy usage to the
		/// client implementations specific average energy usage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent avgLoadAdjustment;
		/// <summary>
		/// Encoding of cancel control.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String cancelControlMode;
		/// <summary>
		/// Timestamp when a canceling of the event is scheduled to start.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DateTime cancelDateTime;
		/// <summary>
		/// If true, a canceling of the event should start immediately.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean cancelNow;
		/// <summary>
		/// Requested offset to apply to the normal cooling setpoint at the time of the
		/// start of the event. It represents a temperature change that will be applied to
		/// the associated cooling set point. The temperature offsets will be calculated
		/// per the local temperature in the thermostat. The calculated temperature will be
		/// interpreted as the number of degrees to be added to the cooling set point.
		/// Sequential demand response events are not cumulative. The offset shall be
		/// applied to the normal setpoint.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Temperature coolingOffset;
		/// <summary>
		/// Requested cooling set point. Temperature set point is typically defined and
		/// calculated based on local temperature.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Temperature coolingSetpoint;
		/// <summary>
		/// Level of criticality for the action of this control. The action taken by load
		/// control devices for an event can be solely based on this value, or in
		/// combination with other load control event fields supported by the device.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String criticalityLevel;
		/// <summary>
		/// Maximum "on" state duty cycle as a percentage of time. For example, if the
		/// value is 80, the device would be in an "on" state for 80% of the time for the
		/// duration of the action.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.PerCent dutyCycle;
		/// <summary>
		/// Provides a mechanism to direct load control actions to groups of PAN devices.
		/// It can be used in conjunction with the PAN device types.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String enrollmentGroup;
		/// <summary>
		/// Requested offset to apply to the normal heating setpoint at the time of the
		/// start of the event. It represents a temperature change that will be applied to
		/// the associated heating set point. The temperature offsets will be calculated
		/// per the local temperature in the thermostat. The calculated temperature will be
		/// interpreted as the number of degrees to be subtracted from the heating set
		/// point. Sequential demand response events are not cumulative. The offset shall
		/// be applied to the normal setpoint.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Temperature heatingOffset;
		/// <summary>
		/// Requested heating set point. Temperature set point is typically defined and
		/// calculated based on local temperature.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Temperature heatingSetpoint;

		public PanDemandResponse(){

		}

		~PanDemandResponse(){

		}

		public override void Dispose(){

		}

	}//end PanDemandResponse

}//end namespace Metering