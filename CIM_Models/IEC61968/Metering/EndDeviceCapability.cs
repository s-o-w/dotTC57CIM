///////////////////////////////////////////////////////////
//  EndDeviceCapability.cs
//  Implementation of the Class EndDeviceCapability
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:06 AM
//  Original author: T. Kostic
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// Inherent capabilities of an end device (i.e., the functions it supports).
	/// </summary>
	public class EndDeviceCapability {

		/// <summary>
		/// True if autonomous DST (daylight saving time) function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean autonomousDst;
		/// <summary>
		/// True if communication function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean communication;
		/// <summary>
		/// True if connect and disconnect function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean connectDisconnect;
		/// <summary>
		/// True if demand response function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean demandResponse;
		/// <summary>
		/// True if electric metering function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean electricMetering;
		/// <summary>
		/// True if gas metering function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean gasMetering;
		/// <summary>
		/// True if metrology function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean metrology;
		/// <summary>
		/// True if on request read function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean onRequestRead;
		/// <summary>
		/// True if outage history function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean outageHistory;
		/// <summary>
		/// True if device performs pressure compensation for metered quantities.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean pressureCompensation;
		/// <summary>
		/// True if pricing information is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean pricingInfo;
		/// <summary>
		/// True if device produces pulse outputs.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean pulseOutput;
		/// <summary>
		/// True if relays programming function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean relaysProgramming;
		/// <summary>
		/// True if reverse flow function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean reverseFlow;
		/// <summary>
		/// True if device performs super compressibility compensation for metered
		/// quantities.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean superCompressibilityCompensation;
		/// <summary>
		/// True if device performs temperature compensation for metered quantities.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean temperatureCompensation;
		/// <summary>
		/// True if the displaying of text messages is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean textMessage;
		/// <summary>
		/// True if water metering function is supported.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean waterMetering;

		public EndDeviceCapability(){

		}

		~EndDeviceCapability(){

		}

		public virtual void Dispose(){

		}

	}//end EndDeviceCapability

}//end namespace Metering