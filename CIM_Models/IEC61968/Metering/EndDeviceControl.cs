///////////////////////////////////////////////////////////
//  EndDeviceControl.cs
//  Implementation of the Class EndDeviceControl
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:07 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.Metering;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// Instructs an end device (or an end device group) to perform a specified action.
	/// 
	/// </summary>
	public class EndDeviceControl : IdentifiedObject {

		/// <summary>
		/// Level of a demand response program request, where 0=emergency. Note: Attribute
		/// is not defined on DemandResponseProgram as it is not its inherent property (it
		/// serves to control it).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer drProgramLevel;
		/// <summary>
		/// Whether a demand response program request is mandatory. Note: Attribute is not
		/// defined on DemandResponseProgram as it is not its inherent property (it serves
		/// to control it).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean drProgramMandatory;
		/// <summary>
		/// Unique identifier of the business entity originating an end device control.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String issuerID;
		/// <summary>
		/// Identifier assigned by the initiator (e.g. retail electric provider) of an end
		/// device control action to uniquely identify the demand response event, text
		/// message, or other subject of the control action. Can be used when cancelling an
		/// event or text message request or to identify the originating event or text
		/// message in a consequential end device event.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String issuerTrackingID;
		/// <summary>
		/// (if applicable) Price signal used as parameter for this end device control.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Float priceSignal;
		/// <summary>
		/// Timing for the control actions performed on the device identified in the end
		/// device control.
		/// </summary>
		public EndDeviceTiming primaryDeviceTiming;
		/// <summary>
		/// Reason for the control action that allows to determine how to continue
		/// processing. For example, disconnect meter command may require different
		/// processing by the receiving system if it has been issued for a network-related
		/// reason (protection) or for a payment-related reason.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String reason;
		/// <summary>
		/// (if control has scheduled duration) Date and time interval the control has been
		/// scheduled to execute within.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DateTimeInterval scheduledInterval;
		/// <summary>
		/// Timing for the control actions performed by devices that are responding to
		/// event related information sent to the primary device indicated in the end
		/// device control.  For example, load control actions performed by a PAN device in
		/// response to demand response event information sent to a PAN gateway server.
		/// </summary>
		public EndDeviceTiming secondaryDeviceTiming;
		/// <summary>
		/// End device action issued by this end device control.
		/// </summary>
		public TC57CIM.IEC61968.Metering.EndDeviceAction EndDeviceAction;
		/// <summary>
		/// All end devices receiving commands from this end device control.
		/// </summary>
		public TC57CIM.IEC61968.Metering.EndDevice EndDevices;
		/// <summary>
		/// All usage points receiving commands from this end device control.
		/// </summary>
		public TC57CIM.IEC61968.Metering.UsagePoint UsagePoints;
		/// <summary>
		/// All usage point groups receiving commands from this end device control.
		/// </summary>
		public TC57CIM.IEC61968.Metering.UsagePointGroup UsagePointGroups;
		/// <summary>
		/// Type of this end device control.
		/// </summary>
		public TC57CIM.IEC61968.Metering.EndDeviceControlType EndDeviceControlType;

		public EndDeviceControl(){

		}

		~EndDeviceControl(){

		}

		public override void Dispose(){

		}

	}//end EndDeviceControl

}//end namespace Metering