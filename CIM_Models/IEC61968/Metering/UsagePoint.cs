///////////////////////////////////////////////////////////
//  UsagePoint.cs
//  Implementation of the Class UsagePoint
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:30 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61968.Metering;
using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
using TC57CIM.IEC61968.Common;
using TC57CIM.IEC61968.Customers;
namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// Logical or physical point in the network to which readings or events may be
	/// attributed. Used at the place where a physical or virtual meter may be located;
	/// however, it is not required that a meter be present.
	/// </summary>
	public class UsagePoint : IdentifiedObject {

		/// <summary>
		/// Tracks the lifecycle of the metering installation at a usage point with respect
		/// to readiness for billing via advanced metering infrastructure reads.
		/// </summary>
		public AmiBillingReadyKind amiBillingReady;
		/// <summary>
		/// True if as a result of an inspection or otherwise, there is a reason to suspect
		/// that a previous billing may have been performed with erroneous data. Value
		/// should be reset once this potential discrepancy has been resolved.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean checkBilling;
		/// <summary>
		/// A code used to specify the connection category, e.g., low voltage or low
		/// pressure, where the usage point is defined.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String connectionCategory;
		/// <summary>
		/// State of the usage point with respect to connection to the network.
		/// </summary>
		public UsagePointConnectedKind connectionState;
		/// <summary>
		/// Is an indication of how the usage point is physically connected or disconnected.
		/// 
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String disconnectionMethod;
		/// <summary>
		/// Estimated load.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.CurrentFlow estimatedLoad;
		/// <summary>
		/// True if grounded.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean grounded;
		/// <summary>
		/// If true, this usage point is a service delivery point, i.e., a usage point
		/// where the ownership of the service changes hands.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean isSdp;
		/// <summary>
		/// If true, this usage point is virtual, i.e., no physical location exists in the
		/// network where a meter could be located to collect the meter readings. For
		/// example, one may define a virtual usage point to serve as an aggregation of
		/// usage for all of a company's premises distributed widely across the
		/// distribution territory. Otherwise, the usage point is physical, i.e., there is
		/// a logical point in the network where a meter could be located to collect meter
		/// readings.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean isVirtual;
		/// <summary>
		/// If true, minimal or zero usage is expected at this usage point for situations
		/// such as premises vacancy, logical or physical disconnect. It is used for
		/// readings validation and estimation.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Boolean minimalUsageExpected;
		/// <summary>
		/// Nominal service voltage.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Voltage nominalServiceVoltage;
		/// <summary>
		/// Outage region in which this usage point is located.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String outageRegion;
		/// <summary>
		/// Phase code. Number of wires and specific nominal phases can be deduced from
		/// enumeration literal values. For example, ABCN is three-phase, four-wire, s12n
		/// (splitSecondary12N) is single-phase, three-wire, and s1n and s2n are single-
		/// phase, two-wire.
		/// </summary>
		public TC57CIM.IEC61970.Base.Core.PhaseCode phaseCode;
		/// <summary>
		/// Number of potential phases the Usage Point supports, typically 0, 1 or 3.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Integer phaseCount;
		/// <summary>
		/// Quantitative information about the maximum physical capacity of the connection
		/// for the usage point.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DecimalQuantity physicalConnectionCapacity;
		/// <summary>
		/// Current flow that this usage point is configured to deliver.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.CurrentFlow ratedCurrent;
		/// <summary>
		/// Active power that this usage point is configured to deliver.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.ActivePower ratedPower;
		/// <summary>
		/// Cycle day on which the meter for this usage point will normally be read.
		/// Usually correlated with the billing cycle.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String readCycle;
		/// <summary>
		/// Identifier of the route to which this usage point is assigned for purposes of
		/// meter reading. Typically used to configure hand held meter reading systems
		/// prior to collection of reads.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String readRoute;
		/// <summary>
		/// Remarks about this usage point, for example the reason for it being rated with
		/// a non-nominal priority.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String serviceDeliveryRemark;
		/// <summary>
		/// Priority of service for this usage point. Note that usage points at the same
		/// service location can have different priorities.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.String servicePriority;
		/// <summary>
		/// All registers for quantities metered at this Usage Point.
		/// </summary>
		public TC57CIM.IEC61968.Metering.Register Register;
		/// <summary>
		/// All equipment connecting this usage point to the electrical grid.
		/// </summary>
		public TC57CIM.IEC61970.Base.Core.Equipment Equipments;
		/// <summary>
		/// All end devices at this usage point.
		/// </summary>
		public TC57CIM.IEC61968.Metering.EndDevice EndDevices;
		/// <summary>
		/// All multipliers applied at this usage point.
		/// </summary>
		public TC57CIM.IEC61968.Metering.ServiceMultiplier ServiceMultipliers;
		/// <summary>
		/// All configuration events created for this usage point.
		/// </summary>
		public TC57CIM.IEC61968.Common.ConfigurationEvent ConfigurationEvents;
		/// <summary>
		/// Service category delivered by this usage point.
		/// </summary>
		public TC57CIM.IEC61968.Customers.ServiceCategory ServiceCategory;

		public UsagePoint(){

		}

		~UsagePoint(){

		}

		public override void Dispose(){

		}

	}//end UsagePoint

}//end namespace Metering