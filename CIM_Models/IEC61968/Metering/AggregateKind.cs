///////////////////////////////////////////////////////////
//  AggregateKind.cs
//  Implementation of the Class AggregateKind
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:32:55 AM
//  Original author: Marty
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



namespace TC57CIM.IEC61968.Metering {
	/// <summary>
	/// Kind of aggregation for read / measured values from multiple end points.
	/// </summary>
	public enum AggregateKind : int {

		/// <summary>
		/// Not applicable.
		/// </summary>
		none = 0,
		/// <summary>
		/// The value represents average.
		/// </summary>
		average = 2,
		/// <summary>
		/// The value represents an amount over which a threshold was exceeded.
		/// </summary>
		excess = 4,
		/// <summary>
		/// The value represents a programmed high threshold.
		/// </summary>
		highThreshold = 5,
		/// <summary>
		/// The value represents a programmed low threshold.
		/// </summary>
		lowThreshold = 7,
		/// <summary>
		/// The highest value observed.
		/// </summary>
		maximum = 8,
		/// <summary>
		/// The smallest value observed.
		/// </summary>
		minimum = 9,
		/// <summary>
		/// The nominal value.
		/// </summary>
		nominal = 11,
		/// <summary>
		/// The normal value.
		/// </summary>
		normal = 12,
		/// <summary>
		/// The second highest value observed.
		/// </summary>
		secondMaximum = 16,
		/// <summary>
		/// The second smallest value observed.
		/// </summary>
		secondMinimum = 17,
		/// <summary>
		/// The third highest value observed.
		/// </summary>
		thirdMaximum = 23,
		/// <summary>
		/// The fourth highest value observed.
		/// </summary>
		fourthMaximum = 24,
		/// <summary>
		/// The fifth highest value observed.
		/// </summary>
		fifthMaximum = 25,
		/// <summary>
		/// The accumulated sum.
		/// </summary>
		sum = 26

	}//end AggregateKind

}//end namespace Metering