///////////////////////////////////////////////////////////
//  Shift.cs
//  Implementation of the Class Shift
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:24 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61968.PaymentMetering {
	/// <summary>
	/// Generally referring to a period of operation or work performed. Whether the
	/// shift is open/closed can be derived from attributes 'activityInterval.start'
	/// and 'activityInterval.end'.
	/// The grand total for receipts (i.e., cumulative total of all actual receipted
	/// amounts during this shift; bankable + non-bankable; excludes rounding error
	/// totals) can be derived from receipt:
	/// =sum('Receipt.receiptAmount'); includes bankable and non-bankable receipts.
	/// It also has to be reconciled against:
	/// =sum('receiptsGrandTotalBankable' + 'receiptsGrandTotalNonBankable')
	/// and against receipt summary:
	/// =sum('ReceiptSummary.receiptsTotal').
	/// The attributes with "GrandTotal" defined in this class may need to be used when
	/// the source data is periodically flushed from the system and then these cannot
	/// be derived.
	/// </summary>
	public class Shift : IdentifiedObject {

		/// <summary>
		/// Interval for activity of this shift.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.DateTimeInterval activityInterval;
		/// <summary>
		/// Total of amounts receipted during this shift that can be manually banked (cash
		/// and cheques for example). Values are obtained from Receipt attributes:
		/// =sum(Receipt.receiptAmount) for all Receipt.bankable = true.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money receiptsGrandTotalBankable;
		/// <summary>
		/// Total of amounts receipted during this shift that cannot be manually banked
		/// (card payments for example). Values are obtained from Receipt attributes:
		/// =sum(Receipt.receiptAmount) for all Receipt.bankable = false.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money receiptsGrandTotalNonBankable;
		/// <summary>
		/// Cumulative amount in error due to process rounding not reflected in
		/// receiptsGrandTotal. Values are obtained from Receipt attributes:
		/// =sum(Receipt.receiptRounding).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money receiptsGrandTotalRounding;
		/// <summary>
		/// Cumulative total of transacted amounts during this shift. Values are obtained
		/// from transaction:
		/// =sum('Transaction.transactionAmount'). It also has to be reconciled against
		/// transaction summary:
		/// =sum('TransactionSummary.transactionsTotal').
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money transactionsGrandTotal;
		/// <summary>
		/// Cumulative amount in error due to process rounding not reflected in
		/// transactionsGandTotal. Values are obtained from Transaction attributes:
		/// =sum(Transaction.transactionRounding).
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money transactionsGrandTotalRounding;

		public Shift(){

		}

		~Shift(){

		}

		public override void Dispose(){

		}

	}//end Shift

}//end namespace PaymentMetering