///////////////////////////////////////////////////////////
//  Due.cs
//  Implementation of the Class Due
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:06 AM
//  Original author: T. Kostic
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
namespace TC57CIM.IEC61968.PaymentMetering {
	/// <summary>
	/// Details on amounts due for an account.
	/// </summary>
	public class Due {

		/// <summary>
		/// Part of 'current' that constitutes the arrears portion.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money arrears;
		/// <summary>
		/// Part of 'current' that constitutes the charge portion: 'charges' = 'Charge.
		/// fixedPortion' + 'Charge.variablePortion'.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money charges;
		/// <summary>
		/// Current total amount now due: current = principle + arrears + interest +
		/// charges. Typically the rule for settlement priority is: interest dues, then
		/// arrears dues, then current dues, then charge dues.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money current;
		/// <summary>
		/// Part of 'current' that constitutes the interest portion.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money interest;
		/// <summary>
		/// Part of 'current' that constitutes the portion of the principle amount
		/// currently due.
		/// </summary>
		public TC57CIM.IEC61970.Base.Domain.Money principle;

		public Due(){

		}

		~Due(){

		}

		public virtual void Dispose(){

		}

	}//end Due

}//end namespace PaymentMetering