///////////////////////////////////////////////////////////
//  ServiceSupplier.cs
//  Implementation of the Class ServiceSupplier
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:24 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61970.Base.Domain;
using TC57CIM.IEC61968.PaymentMetering;
using TC57CIM.IEC61968.Customers;
using TC57CIM.IEC61968.Metering;
using TC57CIM.IEC61968.Common;
using TC57CIM.IEC61968.InfIEC61968.InfCommon;
namespace TC57CIM.IEC61968.PaymentMetering {
	/// <summary>
	/// Organisation that provides services to customers.
	/// </summary>
	public class ServiceSupplier : OrganisationRole {

		/// <summary>
		/// Unique transaction reference prefix number issued to an entity by the
		/// International Organization for Standardization for the purpose of tagging onto
		/// electronic financial transactions, as defined in ISO/IEC 7812-1 and ISO/IEC
		/// 7812-2.
		/// </summary>
		public string issuerIdentificationNumber;
		/// <summary>
		/// Kind of supplier.
		/// </summary>
		public SupplierKind kind;
		/// <summary>
		/// All customer agreements of this service supplier.
		/// </summary>
		public TC57CIM.IEC61968.Customers.CustomerAgreement CustomerAgreements;
		/// <summary>
		/// All usage points this service supplier utilises to deliver a service.
		/// </summary>
		public TC57CIM.IEC61968.Metering.UsagePoint UsagePoints;
		/// <summary>
		/// All BackAccounts this ServiceSupplier owns.
		/// </summary>
		public TC57CIM.IEC61968.InfIEC61968.InfCommon.BankAccount BankAccounts;

		public ServiceSupplier(){

		}

		~ServiceSupplier(){

		}

		public override void Dispose(){

		}

	}//end ServiceSupplier

}//end namespace PaymentMetering