///////////////////////////////////////////////////////////
//  Vendor.cs
//  Implementation of the Class Vendor
//  Generated by Enterprise Architect
//  Created on:      15-Jun-2024 10:33:31 AM
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using TC57CIM.IEC61968.PaymentMetering;
using TC57CIM.IEC61970.Base.Core;
namespace TC57CIM.IEC61968.PaymentMetering {
	/// <summary>
	/// The entity that owns the point of sale and contracts with the cashier to
	/// receipt payments and vend tokens using the payment system. The vendor has a
	/// private contract with and is managed by the merchant which is a type of
	/// organisation. The vendor is accountable to the merchant for revenue collected,
	/// and the merchant is in turn accountable to the supplier.
	/// </summary>
	public class Vendor : IdentifiedObject {

		/// <summary>
		/// All vendor shifts opened and owned by this vendor.
		/// </summary>
		public TC57CIM.IEC61968.PaymentMetering.VendorShift VendorShifts;

		public Vendor(){

		}

		~Vendor(){

		}

		public override void Dispose(){

		}

	}//end Vendor

}//end namespace PaymentMetering